{
  "grateful": {
    "title": "Thank you for using Stelios!",
    "description_1": "If you've enjoyed using my design system and appreciate it's features, I would be incredibly grateful if you could show your support by starring the",
    "description_2": "repository",
    "description_3": "A tremendous amount of thought, effort, and time has gone into crafting a responsive, accessible, and versatile system and one star would be a great way to show your appreciation."
  },
  "components": {
    "title": "Components"
  },
  "props": {
    "usage": {
      "label": "Usage",
      "value": "usage"
    },
    "props": {
      "label": "Props",
      "value": "props"
    },
    "theme": {
      "label": "Theme",
      "value": "theme"
    }
  },
  "button": {
    "title": "Button",
    "path": "button",
    "description": "A button initiates an action when clicked.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { Button } from \"stelios\""
      },
      "variants": {
        "label": "Variants",
        "description": "Button comes in multiple variants: contained, outlined, soft, outlined-soft & neumorph."
      },
      "sizes": {
        "label": "Sizes",
        "description": "Button comes in multiple sizes: small, medium & large."
      },
      "icons": {
        "label": "Icons",
        "description": "Button can have icons: leading, trailing or both."
      },
      "rounded": {
        "label": "Rounded",
        "description": "Button can be rounded or not."
      },
      "disabled": {
        "label": "Disabled",
        "description": "Button can be disabled or not."
      },
      "fullWidth": {
        "label": "Full Width",
        "description": "Button can be full width or not."
      }
    },
    "props": {
      "label": "Button Props",
      "variant": {
        "name": "variant",
        "description": "The variant of the button",
        "type": "contained | outlined | soft | outlined-soft | neumorph",
        "default": "contained"
      },
      "size": {
        "name": "size",
        "description": "The size of the button",
        "type": "small | medium | large",
        "default": "medium"
      },
      "rounded": {
        "name": "rounded",
        "description": "Is the button rounded or not?",
        "type": "boolean",
        "default": "false"
      },
      "disabled": {
        "name": "disabled",
        "description": "Is the button disabled or not?",
        "type": "boolean",
        "default": "false"
      },
      "isFullWidth": {
        "name": "isFullWidth",
        "description": "Is the button full width or not?",
        "type": "boolean",
        "default": "false"
      },
      "color": {
        "name": "color",
        "description": "The color of the button created using the color palette",
        "type": "string",
        "default": "#00b4d8"
      },
      "leadingIcon": {
        "name": "leadingIcon",
        "description": "The leading icon of the button",
        "type": "ReactNode",
        "default": "null"
      },
      "trailingIcon": {
        "name": "trailingIcon",
        "description": "The trailing icon of the button",
        "type": "ReactNode",
        "default": "null"
      },
      "children": {
        "name": "children",
        "description": "The content of the button",
        "type": "ReactNode",
        "default": "null"
      },
      "onClick": {
        "name": "onClick",
        "description": "The function to be called when the button is clicked",
        "type": "(e: React.MouseEvent<HTMLButtonElement>) => void;",
        "default": "undefined"
      }
    }
  },
  "iconButton": {
    "title": "Icon Button",
    "path": "icon-button",
    "description": "IconButton is a button component that can be used to trigger an event or action.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { IconButton } from \"stelios\""
      },
      "variants": {
        "label": "Variants",
        "description": "IconButton comes in multiple variants: contained, outlined, soft, outlined-soft & neumorph."
      },
      "sizes": {
        "label": "Sizes",
        "description": "IconButton comes in multiple sizes: small, medium & large."
      },
      "disabled": {
        "label": "Disabled",
        "description": "IconButton can be disabled or not."
      }
    },
    "props": {
      "label": "IconButton Props",
      "variant": {
        "name": "variant",
        "description": "The variant of the IconButton",
        "type": "contained | outlined | soft | outlined-soft | neumorph",
        "default": "contained"
      },
      "size": {
        "name": "size",
        "description": "The size of the IconButton",
        "type": "small | medium | large",
        "default": "medium"
      },
      "disabled": {
        "name": "disabled",
        "description": "Is the IconButton disabled or not?",
        "type": "boolean",
        "default": "false"
      },
      "color": {
        "name": "color",
        "description": "The color of the IconButton created using the color palette",
        "type": "string",
        "default": "#00b4d8"
      },
      "icon": {
        "name": "icon",
        "description": "The icon of the IconButton",
        "type": "ReactNode",
        "default": "null"
      },
      "alt": {
        "name": "alt",
        "description": "The alt text of the icon",
        "type": "string",
        "default": "undefined"
      },
      "onClick": {
        "name": "onClick",
        "description": "The function to be called when the IconButton is clicked",
        "type": "(e: React.MouseEvent<HTMLButtonElement>) => void;",
        "default": "undefined"
      }
    }
  },
  "toggleButton": {
    "title": "Toggle Button",
    "path": "toggle-button",
    "description": "Button Group with multiple buttons that can be toggled on or off.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { ToggleButton } from \"stelios\""
      },
      "sizes": {
        "label": "Sizes",
        "description": "ToggleButton comes in multiple sizes: small, medium & large."
      }
    },
    "props": {
      "toggleButtonGroup": {
        "label": "ToggleButtonGroup Props",
        "children": {
          "name": "children",
          "description": "The content of the ToggleButtonGroup",
          "type": "React.ReactNode | React.ReactNode[]",
          "default": "undefined"
        },
        "value": {
          "name": "value",
          "description": "The selected value of the ToggleButton",
          "type": "string",
          "default": "undefined"
        },
        "width": {
          "name": "width",
          "description": "The width of the ToggleButtonGroup",
          "type": "string",
          "default": "fit-content"
        },
        "color": {
          "name": "color",
          "description": "The color of the ToggleButtonGroup created using the color palette",
          "type": "string",
          "default": "#00b4d8"
        },
        "size": {
          "name": "size",
          "description": "The size of the ToggleButtonGroup",
          "type": "small | medium | large",
          "default": "medium"
        },
        "onClick": {
          "name": "onClick",
          "description": "The function to be called when the ToggleButtonGroup is clicked",
          "type": "(e: React.MouseEvent, value?: string) => void",
          "default": "undefined"
        }
      },
      "toggleButton": {
        "label": "ToggleButton Props",
        "index": {
          "name": "index",
          "description": "The index of the ToggleButton",
          "type": "string",
          "default": "undefined"
        },
        "value": {
          "name": "value",
          "description": "The value of the ToggleButton",
          "type": "string",
          "default": "undefined"
        },
        "children": {
          "name": "children",
          "description": "The content of the ToggleButton",
          "type": "React.ReactNode | React.ReactNode[]",
          "default": "undefined"
        },
        "defaultSelected": {
          "name": "defaultSelected",
          "description": "Is the ToggleButton selected by default?",
          "type": "boolean",
          "default": "false"
        },
        "selected": {
          "name": "selected",
          "description": "Is the ToggleButton selected?",
          "type": "boolean",
          "default": "false"
        },
        "size": {
          "name": "size",
          "description": "The size of the ToggleButton",
          "type": "small | medium | large",
          "default": "medium"
        },
        "onClick": {
          "name": "onClick",
          "description": "The function to be called when the ToggleButton is clicked",
          "type": "(e: React.MouseEvent, value?: string, index?: number) => void",
          "default": "undefined"
        }
      }
    }
  },
  "input": {
    "title": "Input",
    "path": "input",
    "description": "Input is a field that allows users to enter text.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { Input } from \"stelios\""
      },
      "variants": {
        "label": "Variants",
        "description": "Input comes in multiple variants: contained, outlined and soft."
      },
      "sizes": {
        "label": "Sizes",
        "description": "Input comes in multiple sizes: small, medium & large."
      }
    },
    "props": {
      "_label": "Input Props",
      "variant": {
        "name": "variant",
        "description": "The variant of the Input",
        "type": "contained | outlined | soft",
        "default": "contained"
      },
      "size": {
        "name": "size",
        "description": "The size of the Input",
        "type": "small | medium | large",
        "default": "medium"
      },
      "type": {
        "name": "type",
        "description": "The type of the Input",
        "type": "text | password | email | number | search",
        "default": "text"
      },
      "cursor": {
        "name": "cursor",
        "description": "The cursor of the Input",
        "type": "pointer | text",
        "default": "pointer"
      },
      "color": {
        "name": "color",
        "description": "The color of the Input created using the color palette",
        "type": "string",
        "default": "#00b4d8"
      },
      "disableSearch": {
        "name": "disableSearch",
        "description": "Disable search in the Input",
        "type": "boolean",
        "default": "false"
      },
      "width": {
        "name": "width",
        "description": "The width of the Input",
        "type": "string",
        "default": "15rem"
      },
      "value": {
        "name": "value",
        "description": "The value of the Input",
        "type": "string | string[]",
        "default": "undefined"
      },
      "disabled": {
        "name": "disabled",
        "description": "Is the Input disabled or not?",
        "type": "boolean",
        "default": "false"
      },
      "fullWidth": {
        "name": "fullWidth",
        "description": "Is the Input full width or not?",
        "type": "boolean",
        "default": "false"
      },
      "label": {
        "name": "label",
        "description": "The label of the Input",
        "type": "string",
        "default": "undefined"
      },
      "labelPosition": {
        "name": "labelPosition",
        "description": "The position of the label",
        "type": "top | bottom",
        "default": "top"
      },
      "placeholder": {
        "name": "placeholder",
        "description": "The placeholder of the Input",
        "type": "string",
        "default": "undefined"
      },
      "leadingIcon": {
        "name": "leadingIcon",
        "description": "The leading icon of the Input",
        "type": "React.ReactNode | React.ReactNode[]",
        "default": "undefined"
      },
      "trailingIcon": {
        "name": "trailingIcon",
        "description": "The trailing icon of the Input",
        "type": "React.ReactNode | React.ReactNode[]",
        "default": "undefined"
      }
    }
  },
  "password": {
    "title": "Password",
    "path": "password",
    "description": "Password is a field that allows users to enter a password.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { Password } from \"stelios\""
      },
      "variants": {
        "label": "Variants",
        "description": "Password comes in multiple variants: contained, outlined and soft."
      },
      "sizes": {
        "label": "Sizes",
        "description": "Password comes in multiple sizes: small, medium & large."
      },
      "hasError": {
        "label": "Show Error",
        "description": "Password can show an error or not."
      },
      "labelPlaceholder": {
        "label": "Label and Placeholder",
        "description": "Password can have a label and a placeholder."
      }
    },
    "props": {
      "_label": "Password Props",
      "variant": {
        "name": "variant",
        "description": "the variant of the password",
        "type": "contained | outlined | soft",
        "default": "contained"
      },
      "size": {
        "name": "size",
        "description": "the size of the password",
        "type": "small | medium | large",
        "default": "medium"
      },
      "cursor": {
        "name": "cursor",
        "description": "the cursor of the password",
        "type": "pointer | text",
        "default": "pointer"
      },
      "color": {
        "name": "color",
        "description": "the color of the password created using the color palette",
        "type": "string",
        "default": "#00b4d8"
      },
      "width": {
        "name": "width",
        "description": "the width of the password",
        "type": "string",
        "default": "15rem"
      },
      "value": {
        "name": "value",
        "description": "the value of the password",
        "type": "string | string[]",
        "default": "undefined"
      },
      "disabled": {
        "name": "disabled",
        "description": "Is the password disabled or not?",
        "type": "boolean",
        "default": "false"
      },
      "fullWidth": {
        "name": "fullWidth",
        "description": "Is the password full width or not?",
        "type": "boolean",
        "default": "false"
      },
      "label": {
        "name": "label",
        "description": "the label of the password",
        "type": "string",
        "default": "undefined"
      },
      "labelPosition": {
        "name": "labelPosition",
        "description": "the position of the label",
        "type": "top | bottom",
        "default": "top"
      },
      "placeholder": {
        "name": "placeholder",
        "description": "the placeholder of the password",
        "type": "string",
        "default": "undefined"
      }
    }
  },
  "select": {
    "title": "Select",
    "path": "select",
    "description": "Select is a field that allows users to select an option from a list.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { Select } from \"stelios\""
      },
      "variants": {
        "label": "Variants",
        "description": "Select comes in multiple variants: contained, outlined and soft."
      },
      "sizes": {
        "label": "Sizes",
        "description": "Select comes in multiple sizes: small, medium & large."
      }
    },
    "props": {
      "_label": "Select Props",
      "variant": {
        "name": "variant",
        "description": "the variant of the select",
        "type": "contained | outlined | soft",
        "default": "contained"
      },
      "size": {
        "name": "size",
        "description": "the size of the select",
        "type": "small | medium | large",
        "default": "medium"
      },
      "label": {
        "name": "label",
        "description": "the label of the select",
        "type": "string",
        "default": "undefined"
      },
      "open": {
        "name": "open",
        "description": "Is the select open by default?",
        "type": "boolean",
        "default": "false"
      },
      "placeholder": {
        "name": "placeholder",
        "description": "the placeholder of the select",
        "type": "string",
        "default": "undefined"
      },
      "options": {
        "name": "options",
        "description": "the options of the select",
        "type": "MenuItemProps[]",
        "default": "undefined"
      },
      "color": {
        "name": "color",
        "description": "the color of the select created using the color palette",
        "type": "string",
        "default": "#00b4d8"
      },
      "onClick": {
        "name": "onClick",
        "description": "the function to be called when the select is clicked",
        "type": "(e: React.MouseEvent, { title, value }: MenuItemKeyProps) => void;",
        "default": "undefined"
      }
    }
  },
  "autocomplete": {
    "title": "Autocomplete",
    "path": "autocomplete",
    "description": "Autocomplete is a field that allows users to select an option from a list by searching.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { Autocomplete } from \"stelios\""
      },
      "variants": {
        "label": "Variants",
        "description": "Autocomplete comes in multiple variants: contained, outlined and soft."
      },
      "sizes": {
        "label": "Sizes",
        "description": "Autocomplete comes in multiple sizes: small, medium & large."
      },
      "open": {
        "label": "Default open",
        "description": "Autocomplete can be open by default."
      }
    },
    "props": {
      "_label": "Autocomplete Props",
      "variant": {
        "name": "variant",
        "description": "the variant of the autocomplete",
        "type": "contained | outlined | soft",
        "default": "contained"
      },
      "size": {
        "name": "size",
        "description": "the size of the autocomplete",
        "type": "small | medium | large",
        "default": "medium"
      },
      "label": {
        "name": "label",
        "description": "the label of the autocomplete",
        "type": "string",
        "default": "undefined"
      },
      "open": {
        "name": "open",
        "description": "Is the autocomplete open by default?",
        "type": "boolean",
        "default": "false"
      },
      "placeholder": {
        "name": "placeholder",
        "description": "the placeholder of the autocomplete",
        "type": "string",
        "default": "undefined"
      },
      "options": {
        "name": "options",
        "description": "the options of the autocomplete",
        "type": "MenuItemProps[]",
        "default": "undefined"
      },
      "color": {
        "name": "color",
        "description": "the color of the autocomplete created using the color palette",
        "type": "string",
        "default": "#00b4d8"
      },
      "onClick": {
        "name": "onClick",
        "description": "the function to be called when the autocomplete is clicked",
        "type": "(e: React.MouseEvent, { title, value }: MenuItemKeyProps) => void;",
        "default": "undefined"
      }
    }
  },
  "numberInput": {
    "title": "Number Input",
    "path": "number-input",
    "description": "Number Input is a field that allows users to enter a number.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { NumberInput } from \"stelios\""
      },
      "variants": {
        "label": "Variants",
        "description": "Number Input comes in multiple variants: contained, outlined and soft."
      },
      "sizes": {
        "label": "Sizes",
        "description": "Number Input comes in multiple sizes: small, medium & large."
      }
    },
    "props": {
      "_label": "Number Input Props",
      "variant": {
        "name": "variant",
        "description": "the variant of the number input",
        "type": "contained | outlined | soft",
        "default": "contained"
      },
      "size": {
        "name": "size",
        "description": "the size of the number input",
        "type": "small | medium | large",
        "default": "medium"
      },
      "label": {
        "name": "label",
        "description": "the label of the number input",
        "type": "string",
        "default": "undefined"
      },
      "min": {
        "name": "min",
        "description": "the minimum value of the number input",
        "type": "number",
        "default": "0"
      },
      "max": {
        "name": "max",
        "description": "the maximum value of the number input",
        "type": "number",
        "default": "100"
      },
      "value": {
        "name": "value",
        "description": "the value of the number input",
        "type": "number",
        "default": "0"
      },
      "color": {
        "name": "color",
        "description": "the color of the number input created using the color palette",
        "type": "string",
        "default": "#00b4d8"
      },
      "onChange": {
        "name": "onChange",
        "description": "the function to be called when the number input is changed",
        "type": "(e: React.ChangeEvent<HTMLInputElement> | React.MouseEvent, value?: number) => void;",
        "default": "undefined"
      },
      "onIncrement": {
        "name": "onIncrement",
        "description": "the function to be called when the number input is incremented",
        "type": "(e: React.MouseEvent, value?: number) => void;",
        "default": "undefined"
      },
      "onDecrement": {
        "name": "onDecrement",
        "description": "the function to be called when the number input is decremented",
        "type": "(e: React.MouseEvent, value?: number) => void;",
        "default": "undefined"
      }
    }
  },
  "checkbox": {
    "title": "Checkbox",
    "path": "checkbox",
    "description": "Checkbox is a field that allows users to select one or more options from a list.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { Checkbox, FormControlLabel } from \"stelios\""
      },
      "sizes": {
        "label": "Sizes",
        "description": "Checkbox comes in multiple sizes: small, medium & large."
      }
    },
    "props": {
      "_label": "Checkbox Props",
      "value": {
        "name": "value",
        "description": "the value of the checkbox",
        "type": "string",
        "default": "undefined"
      },
      "label": {
        "name": "label",
        "description": "the label of the checkbox",
        "type": "string",
        "default": "undefined"
      },
      "size": {
        "name": "size",
        "description": "the size of the checkbox",
        "type": "small | medium | large",
        "default": "medium"
      },
      "color": {
        "name": "color",
        "description": "the color of the checkbox created using the color palette",
        "type": "string",
        "default": "#00b4d8"
      },
      "checked": {
        "name": "checked",
        "description": "Is the checkbox checked or not?",
        "type": "boolean",
        "default": "false"
      },
      "name": {
        "name": "name",
        "description": "the name of the checkbox",
        "type": "string",
        "default": "undefined"
      },
      "disabled": {
        "name": "disabled",
        "description": "Is the checkbox disabled or not?",
        "type": "boolean",
        "default": "false"
      }
    }
  },
  "radio": {
    "title": "Radio",
    "path": "radio",
    "description": "Radio is a field that allows users to select one option from a list.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { Radio, FormControlLabel } from \"stelios\""
      },
      "sizes": {
        "label": "Sizes",
        "description": "Radio comes in multiple sizes: small, medium & large."
      }
    },
    "props": {
      "_label": "Radio Props",
      "value": {
        "name": "value",
        "description": "the value of the radio",
        "type": "string",
        "default": "undefined"
      },
      "label": {
        "name": "label",
        "description": "the label of the radio",
        "type": "string",
        "default": "undefined"
      },
      "size": {
        "name": "size",
        "description": "the size of the radio",
        "type": "small | medium | large",
        "default": "medium"
      },
      "color": {
        "name": "color",
        "description": "the color of the radio created using the color palette",
        "type": "string",
        "default": "#00b4d8"
      },
      "checked": {
        "name": "checked",
        "description": "Is the radio checked or not?",
        "type": "boolean",
        "default": "false"
      },
      "name": {
        "name": "name",
        "description": "the name of the radio",
        "type": "string",
        "default": "undefined"
      },
      "disabled": {
        "name": "disabled",
        "description": "Is the radio disabled or not?",
        "type": "boolean",
        "default": "false"
      }
    }
  },
  "switch": {
    "title": "Switch",
    "path": "switch",
    "description": "Switch is a field that allows users to turn an option on or off.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { Switch, FormControlLabel } from \"stelios\""
      },
      "sizes": {
        "label": "Sizes",
        "description": "Switch comes in multiple sizes: small, medium & large."
      }
    },
    "props": {
      "_label": "Switch Props",
      "value": {
        "name": "value",
        "description": "the value of the switch",
        "type": "string",
        "default": "undefined"
      },
      "label": {
        "name": "label",
        "description": "the label of the switch",
        "type": "string",
        "default": "undefined"
      },
      "size": {
        "name": "size",
        "description": "the size of the switch",
        "type": "small | medium | large",
        "default": "medium"
      },
      "color": {
        "name": "color",
        "description": "the color of the switch created using the color palette",
        "type": "string",
        "default": "#00b4d8"
      },
      "checked": {
        "name": "checked",
        "description": "Is the switch checked or not?",
        "type": "boolean",
        "default": "false"
      },
      "disabled": {
        "name": "disabled",
        "description": "Is the switch disabled or not?",
        "type": "boolean",
        "default": "false"
      }
    }
  },
  "avatar": {
    "title": "Avatar",
    "path": "avatar",
    "description": "Avatar is an image that represents a user or an icon.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { Avatar } from \"stelios\""
      },
      "sizes": {
        "label": "Sizes",
        "description": "Avatar comes in multiple sizes: small, medium & large."
      },
      "shape": {
        "label": "Shapes",
        "description": "Avatar comes in multiple shapes: rounded & square."
      },
      "initials": {
        "label": "Initials",
        "description": "Avatar can be initials."
      },
      "image": {
        "label": "Image",
        "description": "Avatar can be an image."
      },
      "variant": {
        "label": "Variants",
        "description": "Avatar comes in multiple variants: contained, outlined & soft."
      }
    },
    "props": {
      "_label": "Avatar Props",
      "src": {
        "name": "src",
        "description": "the source of the image",
        "type": "string",
        "default": "undefined"
      },
      "alt": {
        "name": "alt",
        "description": "the alt text of the image",
        "type": "string",
        "default": "undefined"
      },
      "type": {
        "name": "type",
        "description": "the type of the avatar",
        "type": "image | initials",
        "default": "image"
      },
      "initials": {
        "name": "initials",
        "description": "the initials of the avatar",
        "type": "string",
        "default": "undefined"
      },
      "size": {
        "name": "size",
        "description": "the size of the avatar",
        "type": "small | medium | large | xlarge",
        "default": "medium"
      },
      "shape": {
        "name": "shape",
        "description": "the shape of the avatar",
        "type": "rounded | square",
        "default": "rounded"
      },
      "variant": {
        "name": "variant",
        "description": "the variant of the avatar",
        "type": "contained | outlined | soft",
        "default": "contained"
      },
      "color": {
        "name": "color",
        "description": "the color of the avatar created using the color palette",
        "type": "string",
        "default": "#00b4d8"
      }
    }
  },
  "tag": {
    "title": "Tag",
    "path": "tag",
    "description": "Tag is a small piece of information that represents a category or a label.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { Tag } from \"stelios\""
      },
      "sizes": {
        "label": "Sizes",
        "description": "Tag comes in multiple sizes: small, medium & large."
      },
      "variants": {
        "label": "Variants",
        "description": "Tag comes in multiple variants: contained and outlined."
      },
      "icons": {
        "label": "Icons",
        "description": "Tag can have leading and trailing icons or both."
      },
      "clickable": {
        "label": "Clickable",
        "description": "Tag can be clickable or not."
      }
    },
    "props": {
      "_label": "Tag Props",
      "variant": {
        "name": "variant",
        "description": "the variant of the tag",
        "type": "contained | outlined",
        "default": "contained"
      },
      "size": {
        "name": "size",
        "description": "the size of the tag",
        "type": "small | medium | large",
        "default": "medium"
      },
      "color": {
        "name": "color",
        "description": "the color of the tag created using the color palette",
        "type": "string",
        "default": "#00b4d8"
      },
      "leadingIcon": {
        "name": "leadingIcon",
        "description": "the leading icon of the tag",
        "type": "React.ReactNode",
        "default": "undefined"
      },
      "trailingIcon": {
        "name": "trailingIcon",
        "description": "the trailing icon of the tag",
        "type": "React.ReactNode",
        "default": "undefined"
      },
      "clickable": {
        "name": "clickable",
        "description": "Is the tag clickable or not?",
        "type": "boolean",
        "default": "false"
      },
      "onClick": {
        "name": "onClick",
        "description": "the function to be called when the tag is clicked",
        "type": "(e: React.MouseEvent<HTMLButtonElement>) => void;",
        "default": "undefined"
      }
    }
  },
  "banner": {
    "title": "Banner",
    "path": "banner",
    "description": "Banner is a large message that is displayed to the user.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { Banner } from \"stelios\""
      },
      "variants": {
        "label": "Variants",
        "description": "Banner comes in multiple variants: contained, outlined and soft."
      },
      "title": {
        "label": "Title, Title Icon and Leading Icon",
        "description": "Banner can have a title, title icon and a leading icon."
      },
      "width": {
        "label": "Width",
        "description": "Banner has a customizable width."
      }
    },
    "props": {
      "_label": "Banner Props",
      "variant": {
        "name": "variant",
        "description": "the variant of the banner",
        "type": "contained | outlined | soft",
        "default": "contained"
      },
      "title": {
        "name": "title",
        "description": "the title of the banner",
        "type": "string",
        "default": "undefined"
      },
      "description": {
        "name": "description",
        "description": "the description of the banner",
        "type": "string",
        "default": "undefined"
      },
      "titleIcon": {
        "name": "titleIcon",
        "description": "the title icon of the banner",
        "type": "React.ReactNode",
        "default": "undefined"
      },
      "leadingIcon": {
        "name": "leadingIcon",
        "description": "the leading icon of the banner",
        "type": "React.ReactNode",
        "default": "undefined"
      },
      "width": {
        "name": "width",
        "description": "the width of the banner",
        "type": "string",
        "default": "100%"
      },
      "color": {
        "name": "color",
        "description": "the color of the banner created using the color palette",
        "type": "string",
        "default": "#00b4d8"
      }
    }
  },
  "capsule": {
    "title": "Capsule",
    "path": "capsule",
    "description": "Capsule is a small piece of information that represents a category or a label.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { Capsule } from \"stelios\""
      },
      "variants": {
        "label": "Variants",
        "description": "Capsule comes in multiple variants: contained, outlined, soft and outlined-soft."
      },
      "width_height": {
        "label": "Width and Height",
        "description": "Capsule has customizable width and height."
      },
      "image": {
        "label": "Image",
        "description": "Capsule can be an image."
      }
    },
    "props": {
      "_label": "Capsule Props",
      "variant": {
        "name": "variant",
        "description": "the variant of the capsule",
        "type": "contained | outlined | soft | outlined-soft",
        "default": "contained"
      },
      "color": {
        "name": "color",
        "description": "the color of the capsule created using the color palette",
        "type": "string",
        "default": "#00b4d8"
      },
      "width": {
        "name": "width",
        "description": "the width of the capsule",
        "type": "string",
        "default": "fit-content"
      },
      "height": {
        "name": "height",
        "description": "the height of the capsule",
        "type": "string",
        "default": "fit-content"
      },
      "image": {
        "name": "image",
        "description": "the image of the capsule",
        "type": "string",
        "default": "undefined"
      },
      "imageAlt": {
        "name": "imageAlt",
        "description": "the alt text of the image",
        "type": "string",
        "default": "undefined"
      },
      "imagePosition": {
        "name": "imagePosition",
        "description": "the position of the image",
        "type": "top | bottom | left | right",
        "default": "left"
      },
      "title": {
        "name": "title",
        "description": "the title of the capsule",
        "type": "string",
        "default": "undefined"
      },
      "description": {
        "name": "description",
        "description": "the description of the capsule",
        "type": "string",
        "default": "undefined"
      },
      "onClick": {
        "name": "onClick",
        "description": "the function to be called when the capsule is clicked",
        "type": "(e: React.MouseEvent<HTMLButtonElement>) => void;",
        "default": "undefined"
      }
    }
  },
  "card": {
    "title": "Card",
    "path": "card",
    "description": "Card is a container that groups related information in a box.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { Card } from \"stelios\""
      },
      "variants": {
        "label": "Variants",
        "description": "Card comes in multiple variants: contained, outlined, soft, outlined-soft and neumorph."
      },
      "header-footer": {
        "label": "Header and Footer",
        "description": "Card can have a header and a footer."
      }
    },
    "props": {
      "_label": "Card Props",
      "variant": {
        "name": "variant",
        "description": "the variant of the card",
        "type": "contained | outlined | soft | outlined-soft | neumorph",
        "default": "contained"
      },
      "width": {
        "name": "width",
        "description": "the width of the card",
        "type": "string",
        "default": "100%"
      },
      "header": {
        "name": "header",
        "description": "the header of the card",
        "type": "React.ReactNode",
        "default": "undefined"
      },
      "footer": {
        "name": "footer",
        "description": "the footer of the card",
        "type": "React.ReactNode",
        "default": "undefined"
      },
      "children": {
        "name": "children",
        "description": "the content of the card",
        "type": "React.ReactNode | React.ReactNode[]",
        "default": "undefined"
      },
      "color": {
        "name": "color",
        "description": "the color of the card created using the color palette",
        "type": "string",
        "default": "#00b4d8"
      }
    },
    "code": {
      "header": "I Know Why the Caged Bird Sings",
      "content": "\"You may encounter many defeats, but you must not be defeated. In fact, it may be necessary to encounter the defeats, so you can know who you are, what you can rise from, how you can still come out of it.\"",
      "footer": "~ Maya Angelou"
    }
  },
  "list": {
    "title": "List",
    "path": "list",
    "description": "List is a container that groups related information in a list.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { List, ListItem } from \"stelios\""
      },
      "variants": {
        "label": "Variants",
        "description": "List comes in multiple variants: ordered, unordered and none."
      },
      "sizes": {
        "label": "Sizes",
        "description": "List comes in multiple sizes: small, medium & large."
      }
    },
    "props": {
      "_label": "List Props",
      "variant": {
        "name": "variant",
        "description": "the variant of the list",
        "type": "ordered | unordered | none",
        "default": "none"
      },
      "size": {
        "name": "size",
        "description": "the size of the list",
        "type": "small | medium | large",
        "default": "medium"
      },
      "children": {
        "name": "children",
        "description": "the content of the list",
        "type": "React.ReactNode | React.ReactNode[]",
        "default": "undefined"
      },
      "color": {
        "name": "color",
        "description": "the color of the list created using the color palette",
        "type": "string",
        "default": "#00b4d8"
      },
      "title": {
        "name": "title",
        "description": "the title of the list",
        "type": "React.ReactNode",
        "default": "undefined"
      }
    },
    "code": {
      "title": "Famous quotes by Albert Einstein",
      "items": [
        "\"Imagination is more important than knowledge.\"",
        "\"The only source of knowledge is experience.\"",
        "\"Try not to become a man of success, but rather try to become a man of value.\""
      ]
    }
  },
  "link": {
    "title": "Link",
    "path": "link",
    "description": "Link is a reference to a web page or a resource.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { Link } from \"stelios\""
      },
      "variants": {
        "label": "Variants",
        "description": "Link comes in multiple variants: default, underline and hover."
      },
      "sizes": {
        "label": "Sizes",
        "description": "Link comes in multiple sizes: small, medium & large."
      }
    },
    "props": {
      "_label": "Link Props",
      "variant": {
        "name": "variant",
        "description": "the variant of the link",
        "type": "default | undeerline | hover",
        "default": "contained"
      },
      "size": {
        "name": "size",
        "description": "the size of the link",
        "type": "small | medium | large",
        "default": "medium"
      },
      "href": {
        "name": "href",
        "description": "the URL of the link",
        "type": "string",
        "default": "undefined"
      },
      "target": {
        "name": "target",
        "description": "the target of the link",
        "type": "_blank | _self | _parent | _top",
        "default": "_self"
      },
      "children": {
        "name": "children",
        "description": "the content of the link",
        "type": "React.ReactNode",
        "default": "undefined"
      },
      "color": {
        "name": "color",
        "description": "the color of the link created using the color palette",
        "type": "string",
        "default": "#00b4d8"
      }
    }
  },
  "text": {
    "title": "Text",
    "path": "text",
    "description": "Text is a container that contains text.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { Text } from \"stelios\""
      },
      "variants": {
        "label": "Variants",
        "description": "Link comes in multiple variants: h1, h2, h3, h4, h5, h6, div, paragraph, label and span."
      },
      "sizes": {
        "label": "Sizes",
        "description": "Link comes in multiple sizes: small, medium & large."
      }
    },
    "props": {
      "_label": "Text Props",
      "variant": {
        "name": "variant",
        "description": "the variant of the text",
        "type": "h1 | h2 | h3 | h4 | h5 | h6 | div | paragraph | label | span",
        "default": "paragraph"
      },
      "size": {
        "name": "size",
        "description": "the size of the text",
        "type": "small | medium | large",
        "default": "medium"
      },
      "align": {
        "name": "align",
        "description": "the alignment of the text",
        "type": "left | center | right | justify",
        "default": "left"
      },
      "children": {
        "name": "children",
        "description": "the content of the text",
        "type": "React.ReactNode",
        "default": "undefined"
      },
      "color": {
        "name": "color",
        "description": "the color of the text created using the color palette",
        "type": "string",
        "default": "#00b4d8"
      },
      "preciseColor": {
        "name": "preciseColor",
        "description": "the precise color of the text",
        "type": "string",
        "default": "undefined"
      },
      "wrap": {
        "name": "wrap",
        "description": "the wrap of the text",
        "type": "boolean",
        "default": "false"
      },
      "disableColor": {
        "name": "disableColor",
        "description": "Is the color disabled or not?",
        "type": "boolean",
        "default": "false"
      },
      "lineHeight": {
        "name": "lineHeight",
        "description": "the line height of the text",
        "type": "string",
        "default": "1.5"
      }
    }
  },
  "navigation-bar": {
    "title": "Navigation Bar",
    "path": "navigation-bar",
    "description": "Navigation Bar is a container that contains navigation items.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { NavigationBar, NavigationBarItem, NavigationBarGroup, NavigationBarGroupItem } from \"stelios\""
      },
      "group": {
        "label": "Group",
        "description": "Navigation Bar can have a group of navigation items."
      }
    },
    "props": {
      "_label": "Navigation Bar Props",
      "children": {
        "name": "children",
        "description": "the content of the navigation bar",
        "type": "React.ReactNode | React.ReactNode[]",
        "default": "undefined"
      },
      "color": {
        "name": "color",
        "description": "the color of the navigation bar created using the color palette",
        "type": "string",
        "default": "#00b4d8"
      }
    }
  },
  "sidebar": {
    "title": "Sidebar",
    "path": "sidebar",
    "description": "Sidebar is a container that contains navigation items.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { Sidebar, SidebarItem } from \"stelios\""
      },
      "group": {
        "label": "Group",
        "description": "Sidebar can have a group of side bar items."
      }
    },
    "props": {
      "_label": "Sidebar Props",
      "children": {
        "name": "children",
        "description": "the content of the sidebar",
        "type": "React.ReactNode | React.ReactNode[]",
        "default": "undefined"
      },
      "color": {
        "name": "color",
        "description": "the color of the sidebar created using the color palette",
        "type": "string",
        "default": "#00b4d8"
      }
    }
  },
  "drawer": {
    "title": "Drawer",
    "path": "drawer",
    "description": "Drawer is a container that opens on the side.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { Drawer, DrawerItem } from \"stelios\""
      },
      "default": {
        "label": "Default",
        "description": "Default Drawer Component"
      }
    },
    "props": {
      "_label": "Drawer Props",
      "children": {
        "name": "children",
        "description": "the content of the drawer",
        "type": "React.ReactNode | React.ReactNode[]",
        "default": "undefined"
      },
      "color": {
        "name": "color",
        "description": "the color of the drawer created using the color palette",
        "type": "string",
        "default": "#00b4d8"
      }
    }
  },
  "tab": {
    "title": "Tab",
    "path": "tab",
    "description": "Tab is a container that contains tab items.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { Tab, TabList, Tab, TabPanels, TabPanel } from \"stelios\""
      },
      "variants": {
        "label": "Variant",
        "description": "Tabs comes in multiple variants: contained and outlined."
      }
    },
    "props": {
      "_label": "Tab Props",
      "variant": {
        "name": "variant",
        "description": "the variant of the tab",
        "type": "contained | outlined",
        "default": "contained"
      }
    }
  },
  "breadcrumbs": {
    "title": "Breadcrumbs",
    "path": "breadcrumbs",
    "description": "Breadcrumbs is a container that contains breadcrumb items.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { Breadcrumbs, BreadcrumbItem } from \"stelios\""
      },
      "variants": {
        "label": "Variant",
        "description": "Breadcrumbs comes in multiple variants: contained, outlined, soft and text."
      },
      "sizes": {
        "label": "Sizes",
        "description": "Breadcrumbs comes in multiple sizes: small, medium & large."
      }
    },
    "props": {
      "_label": "Breadcrumbs Props",
      "variant": {
        "name": "variant",
        "description": "the variant of the breadcrumbs",
        "type": "contained | outlined | soft | text",
        "default": "contained"
      }
    }
  },
  "accordion": {
    "title": "Accordion",
    "path": "accordion",
    "description": "Accordion is a container that contains accordion items.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { Accordion, AccordionItem } from \"stelios\""
      },
      "variants": {
        "label": "Variant",
        "description": "Accordion comes in multiple variants: contained, outlined and soft."
      },
      "sizes": {
        "label": "Sizes",
        "description": "Accordion comes in multiple sizes: small, medium & large."
      }
    },
    "props": {
      "_label": "Accordion Props",
      "variant": {
        "name": "variant",
        "description": "the variant of the accordion",
        "type": "contained | outlined | soft",
        "default": "contained"
      }
    }
  },
  "collapsible": {
    "title": "Collapsible",
    "path": "collapsible",
    "description": "Collapsible is a container that contains collapsible items.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { Collapsible, CollapsibleItem } from \"stelios\""
      },
      "variants": {
        "label": "Variant",
        "description": "Collapsible comes in multiple variants: contained, outlined, soft and transparent."
      }
    },
    "props": {
      "_label": "Collapsible Props",
      "variant": {
        "name": "variant",
        "description": "the variant of the collapsible",
        "type": "contained | outlined | soft | transparent",
        "default": "contained"
      }
    }
  },
  "codepreview": {
    "title": "Code Preview",
    "path": "code-preview",
    "description": "Code Preview is a container that contains code preview items.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { CodePreview, CodePreviewItem } from \"stelios\""
      },
      "default": {
        "label": "Default",
        "description": "Default Code Preview Component"
      }
    },
    "props": {
      "_label": "Code Preview Props",
      "code": {
        "name": "code",
        "description": "the code to be displayed",
        "type": "React.ReactNode | React.ReactNode[]",
        "default": "undefined"
      }
    }
  },
  "codedisplay": {
    "title": "Code Display",
    "path": "code-display",
    "description": "Code Display is a container to display code.",
    "usage": {
      "installation": {
        "label": "Installation Guide",
        "description": "import { CodeDisplay } from \"stelios\""
      },
      "default": {
        "label": "Default",
        "description": "Default Code Display Component"
      }
    },
    "props": {
      "_label": "Code Display Props",
      "code": {
        "name": "code",
        "description": "the code to be displayed",
        "type": "React.ReactNode | React.ReactNode[]",
        "default": "undefined"
      }
    }
  }
}
