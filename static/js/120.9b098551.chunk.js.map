{"version":3,"file":"static/js/120.9b098551.chunk.js","mappings":"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","sources":["content/CardDisplay.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Text,\n  useTheme,\n  Tabs,\n  TabPanels,\n  TabPanel,\n  Card,\n} from \"stelios\";\nimport {\n  RenderBreadcrumbsForComponent,\n  RenderComponentHeading,\n  RenderProps,\n  renderSideBarItem,\n  RenderTabsList,\n  RenderVariations,\n  useWindowSize,\n} from \"../helpers/helpers\";\nimport i18n from \"../i18n/i18n_en.json\";\n\nconst CARD = i18n.card;\nconst CardDisplay = () => {\n  const theme = useTheme().theme!;\n  const colorPalette = theme.colorPalette;\n  const windowSize = useWindowSize();\n  const laptop = windowSize.width < 768;\n  const mobile = windowSize.width < 480;\n\n  const variationRefs = Array.from({ length: 2 }, () =>\n    React.createRef<HTMLDivElement>()\n  );\n  const propsRef = Array.from({ length: 10 }, () =>\n    React.createRef<HTMLDivElement>()\n  );\n  const [selectedTab, setSelectedTab] = React.useState(\"usage\");\n  const [selectedVariationSideBarItem, setSelectedVariationSideBarItem] =\n    React.useState(0);\n  const [selectedPropsSideBarItem, setSeletedPropsSideBarItem] =\n    React.useState(0);\n\n  const textColor =\n    colorPalette.primary.appearance === \"light\" ? \"black\" : \"white\";\n\n  React.useEffect(() => {\n    const handleScroll = () => {\n      if (selectedTab === \"usage\") {\n        for (let i = 0; i < variationRefs.length; i++) {\n          if (variationRefs[i].current?.getBoundingClientRect().top! > 0) {\n            setSelectedVariationSideBarItem(i);\n            return;\n          }\n        }\n      } else if (selectedTab === \"props\") {\n        for (let i = 0; i < propsRef.length; i++) {\n          if (propsRef[i].current?.getBoundingClientRect().top! > 0) {\n            setSeletedPropsSideBarItem(i);\n            return;\n          }\n        }\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [variationRefs, propsRef, selectedTab]);\n\n  return (\n    <div style={{ margin: \"1.5rem 0 4rem 0\", width: mobile ? \"100%\" : laptop ? \"calc(100% - 12rem)\" : \"calc(100% - 22rem)\"}}>\n      <RenderBreadcrumbsForComponent name={CARD.title} path={CARD.path} />\n\n      <div style={{ padding: \"1rem\" }}>\n        <RenderComponentHeading\n          title={CARD.title}\n          description={CARD.description}\n        />\n\n        <Tabs\n          color=\"primary\"\n          style={{ marginTop: \"2rem\" }}\n          value={selectedTab}\n          onChange={(value) => setSelectedTab(value)}\n        >\n          {RenderTabsList()}\n          <TabPanels>\n            <div\n              style={{\n                height: \"1px\",\n                width: \"100%\",\n                backgroundColor: colorPalette.primary.accentScale[9],\n                marginTop: \"1rem\",\n              }}\n            />\n            <TabPanel value=\"usage\">\n              <RenderVariations\n                ref={variationRefs[0]}\n                label={CARD.usage.installation.label}\n                text={CARD.usage.installation.description}\n              />\n              <RenderVariations\n                ref={variationRefs[1]}\n                label={CARD.usage.variants.label}\n                description={CARD.usage.variants.description}\n                code={CODE_1}\n                text={TEXT_1}\n              />\n              {!laptop && renderSideBarItem(\n                [CARD.usage.installation.label, CARD.usage.variants.label],\n                selectedVariationSideBarItem,\n                variationRefs\n              )}\n            </TabPanel>\n            <TabPanel value=\"props\">\n              <Text\n                preciseColor={textColor}\n                size=\"large\"\n                style={{ marginTop: \"2rem\" }}\n              >\n                {CARD.props._label}\n              </Text>\n              <RenderProps\n                ref={propsRef[0]}\n                propName={CARD.props.variant.name}\n                description={CARD.props.variant.description}\n                type={CARD.props.variant.type}\n                defaultValue={CARD.props.variant.default}\n                marginTop=\"1rem\"\n              />\n              <RenderProps\n                ref={propsRef[1]}\n                propName={CARD.props.color.name}\n                description={CARD.props.color.description}\n                type={CARD.props.color.type}\n                defaultValue={CARD.props.color.default}\n              />\n              <RenderProps\n                ref={propsRef[2]}\n                propName={CARD.props.width.name}\n                description={CARD.props.width.description}\n                type={CARD.props.width.type}\n                defaultValue={CARD.props.width.default}\n              />\n              <RenderProps\n                ref={propsRef[3]}\n                propName={CARD.props.header.name}\n                description={CARD.props.header.description}\n                type={CARD.props.header.type}\n                defaultValue={CARD.props.header.default}\n              />\n              <RenderProps\n                ref={propsRef[4]}\n                propName={CARD.props.footer.name}\n                description={CARD.props.footer.description}\n                type={CARD.props.footer.type}\n                defaultValue={CARD.props.footer.default}\n              />\n              <RenderProps\n                ref={propsRef[5]}\n                propName={CARD.props.children.name}\n                description={CARD.props.children.description}\n                type={CARD.props.children.type}\n                defaultValue={CARD.props.children.default}\n              />\n              {!laptop && renderSideBarItem(\n                [\n                  CARD.props.variant.name,\n                  CARD.props.color.name,\n                  CARD.props.width.name,\n                  CARD.props.header.name,\n                  CARD.props.footer.name,\n                  CARD.props.children.name,\n                ],\n                selectedPropsSideBarItem,\n                propsRef\n              )}\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </div>\n    </div>\n  );\n};\nexport default CardDisplay;\n\nconst CODE_1 = (\n  <div\n    style={{\n      display: \"flex\",\n      gap: \"2rem\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    }}\n  >\n    <Card\n      variant=\"contained\"\n      color=\"component\"\n      header={\n        <Text disableColor size=\"medium\">\n          {CARD.code.header}\n        </Text>\n      }\n      footer={\n        <Text disableColor color=\"component\" size=\"small\">\n          {CARD.code.footer}\n        </Text>\n      }\n    >\n      <Text disableColor color=\"component\" size=\"small\">\n        {CARD.code.content}\n      </Text>\n    </Card>\n    <Card\n      variant=\"outlined\"\n      color=\"component\"\n      header={\n        <Text disableColor size=\"medium\">\n          {CARD.code.header}\n        </Text>\n      }\n      footer={\n        <Text disableColor color=\"component\" size=\"small\">\n          {CARD.code.footer}\n        </Text>\n      }\n    >\n      <Text disableColor color=\"component\" size=\"small\">\n        {CARD.code.content}\n      </Text>\n    </Card>\n    <Card\n      variant=\"soft\"\n      color=\"component\"\n      header={\n        <Text disableColor size=\"medium\">\n          {CARD.code.header}\n        </Text>\n      }\n      footer={\n        <Text disableColor color=\"component\" size=\"small\">\n          {CARD.code.footer}\n        </Text>\n      }\n    >\n      <Text disableColor color=\"component\" size=\"small\">\n        {CARD.code.content}\n      </Text>\n    </Card>\n    <Card\n      variant=\"outlined-soft\"\n      color=\"component\"\n      header={\n        <Text disableColor size=\"medium\">\n          {CARD.code.header}\n        </Text>\n      }\n      footer={\n        <Text disableColor color=\"component\" size=\"small\">\n          {CARD.code.footer}\n        </Text>\n      }\n    >\n      <Text disableColor color=\"component\" size=\"small\">\n        {CARD.code.content}\n      </Text>\n    </Card>\n    <Card\n      variant=\"neumorph\"\n      color=\"component\"\n      header={\n        <Text disableColor size=\"medium\">\n          {CARD.code.header}\n        </Text>\n      }\n      footer={\n        <Text disableColor color=\"component\" size=\"small\">\n          {CARD.code.footer}\n        </Text>\n      }\n    >\n      <Text disableColor color=\"component\" size=\"small\">\n        {CARD.code.content}\n      </Text>\n    </Card>\n  </div>\n);\nconst TEXT_1 = `<Card variant=\"contained\" color=\"component\" header={<Text disableColor size=\"medium\">${CARD.code.header}</Text>} footer={<Text color=\"component\" size=\"small\">${CARD.code.footer}</Text>}>\n  <Text disableColor color=\"component\" size=\"small\">${CARD.code.content}</Text>\n</Card>\n\n<Card variant=\"outlined\" color=\"component\" header={<Text disableColor size=\"medium\">${CARD.code.header}</Text>} footer={<Text disableColor color=\"component\" size=\"small\">${CARD.code.footer}</Text>}>\n  <Text disableColor color=\"component\" size=\"small\">${CARD.code.content}</Text>\n</Card>\n\n<Card variant=\"soft\" color=\"component\" header={<Text disableColor size=\"medium\">${CARD.code.header}</Text>} footer={<Text disableColor color=\"component\" size=\"small\">${CARD.code.footer}</Text>}>\n  <Text disableColor color=\"component\" size=\"small\">${CARD.code.content}</Text>\n</Card>\n\n<Card variant=\"outlined-soft\" color=\"component\" header={<Text disableColor size=\"medium\">${CARD.code.header}</Text>} footer={<Text disableColor color=\"component\" size=\"small\">${CARD.code.footer}</Text>}>\n  <Text disableColor color=\"component\" size=\"small\">${CARD.code.content}</Text>\n</Card>\n\n<Card variant=\"neumorph\" color=\"component\" header={<Text disableColor size=\"medium\">${CARD.code.header}</Text>} footer={<Text disableColor color=\"component\" size=\"small\">${CARD.code.footer}</Text>}>\n  <Text disableColor color=\"component\" size=\"small\">${CARD.code.content}</Text>\n</Card>`;\n"],"names":["CARD","i18n","CardDisplay","colorPalette","useTheme","theme","windowSize","useWindowSize","laptop","width","mobile","variationRefs","Array","from","length","React","propsRef","selectedTab","setSelectedTab","selectedVariationSideBarItem","setSelectedVariationSideBarItem","selectedPropsSideBarItem","setSeletedPropsSideBarItem","textColor","primary","appearance","handleScroll","i","_variationRefs$i$curr","current","getBoundingClientRect","top","_propsRef$i$current","window","addEventListener","removeEventListener","_jsxs","style","margin","children","_jsx","RenderBreadcrumbsForComponent","name","title","path","padding","RenderComponentHeading","description","Tabs","color","marginTop","value","onChange","RenderTabsList","TabPanels","height","backgroundColor","accentScale","TabPanel","RenderVariations","ref","label","usage","installation","text","variants","code","CODE_1","TEXT_1","renderSideBarItem","Text","preciseColor","size","props","_label","RenderProps","propName","variant","type","defaultValue","default","header","footer","display","gap","flexWrap","justifyContent","alignItems","Card","disableColor","content"],"sourceRoot":""}