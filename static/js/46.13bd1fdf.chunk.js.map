{"version":3,"file":"static/js/46.13bd1fdf.chunk.js","mappings":"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","sources":["content/AutocompleteDisplay.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Text,\n  useTheme,\n  Tabs,\n  TabPanels,\n  TabPanel,\n  Autocomplete,\n} from \"stelios\";\nimport {\n  RenderBreadcrumbsForComponent,\n  RenderComponentHeading,\n  RenderProps,\n  renderSideBarItem,\n  RenderTabsList,\n  RenderVariations,\n  useWindowSize,\n} from \"../helpers/helpers\";\nimport i18n from \"../i18n/i18n_en.json\";\n\nconst AUTOCOMPLETE = i18n.autocomplete;\nconst AutocompleteDisplay = () => {\n  const windowSize = useWindowSize();\n  const laptop = windowSize.width < 768;\n  const mobile = windowSize.width < 480;\n  const theme = useTheme().theme!;\n  const colorPalette = theme.colorPalette;\n  const variationRefs = Array.from({ length: 3 }, () => React.createRef<HTMLDivElement>());\n  const propsRef = Array.from({ length: 8 }, () => React.createRef<HTMLDivElement>());\n  const [selectedTab, setSelectedTab] = React.useState(\"usage\");\n  const [selectedVariationSideBarItem, setSelectedVariationSideBarItem] = React.useState(0);\n  const [selectedPropsSideBarItem, setSeletedPropsSideBarItem] = React.useState(0);\n\n  const textColor =\n    colorPalette.primary.appearance === \"light\" ? \"black\" : \"white\";\n  \n  React.useEffect(() => {\n    const handleScroll = () => {\n      if(selectedTab === \"usage\"){\n      for(let i=0; i<variationRefs.length; i++){\n        if(variationRefs[i].current?.getBoundingClientRect().top! > 0){\n          setSelectedVariationSideBarItem(i);\n          return;\n        }\n      }}\n      else if(selectedTab === \"props\"){\n        for(let i=0; i<propsRef.length; i++){\n          if(propsRef[i].current?.getBoundingClientRect().top! > 0){\n            setSeletedPropsSideBarItem(i);\n            return;\n          }\n        }\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  },[variationRefs, propsRef, selectedTab]);\n\n    return (\n      <div style={{ margin: \"1.5rem 0 4rem 0\", width: mobile? \"100%\" : laptop ? \"calc(100% - 12rem)\" : \"calc(100% - 22rem)\"}}>\n        <RenderBreadcrumbsForComponent name={AUTOCOMPLETE.title} path={AUTOCOMPLETE.path}/>\n  \n        <div style={{ padding: \"1rem\" }}>\n          <RenderComponentHeading\n            title={AUTOCOMPLETE.title}\n            description={AUTOCOMPLETE.description}\n          />\n  \n          <Tabs color=\"primary\" style={{ marginTop: \"2rem\" }} value={selectedTab} onChange={(value) => setSelectedTab(value)}>\n            {RenderTabsList()}\n            <TabPanels>\n              <div\n                style={{\n                  height: \"1px\",\n                  width: \"100%\",\n                  backgroundColor: colorPalette.primary.accentScale[9],\n                  marginTop: \"1rem\",\n                }}\n              />\n              <TabPanel value=\"usage\">\n                <RenderVariations\n                  ref={variationRefs[0]}\n                  label={AUTOCOMPLETE.usage.installation.label}\n                  text={AUTOCOMPLETE.usage.installation.description}\n                />\n                <RenderVariations\n                  ref={variationRefs[1]}\n                  label={AUTOCOMPLETE.usage.variants.label}\n                  description={AUTOCOMPLETE.usage.variants.description}\n                  code={CODE_1}\n                  text={TEXT_1}\n                />\n                <RenderVariations\n                  ref={variationRefs[2]}\n                  label={AUTOCOMPLETE.usage.sizes.label}\n                  description={AUTOCOMPLETE.usage.sizes.description}\n                  code={CODE_2}\n                  text={TEXT_2}\n                />\n  \n                {!laptop && renderSideBarItem([\n                  AUTOCOMPLETE.usage.installation.label,\n                  AUTOCOMPLETE.usage.variants.label,\n                  AUTOCOMPLETE.usage.sizes.label,\n                ], selectedVariationSideBarItem, variationRefs)} \n              </TabPanel>\n              <TabPanel value=\"props\">\n                <Text\n                  preciseColor={textColor}\n                  size=\"large\"\n                  style={{ marginTop: \"2rem\" }}\n                >\n                  {AUTOCOMPLETE.props._label}\n                </Text>\n                <RenderProps\n                  ref={propsRef[0]}\n                  propName={AUTOCOMPLETE.props.variant.name}\n                  description={\n                    AUTOCOMPLETE.props.variant.description\n                  }\n                  type={AUTOCOMPLETE.props.variant.type}\n                  defaultValue={\n                    AUTOCOMPLETE.props.variant.default\n                  }\n                  marginTop=\"1rem\"\n                />\n                <RenderProps\n                  ref={propsRef[1]}\n                  propName={AUTOCOMPLETE.props.size.name}\n                  description={\n                    AUTOCOMPLETE.props.size.description\n                  }\n                  type={AUTOCOMPLETE.props.size.type}\n                  defaultValue={\n                    AUTOCOMPLETE.props.size.default\n                  }\n                />\n                <RenderProps\n                  ref={propsRef[2]}\n                  propName={AUTOCOMPLETE.props.label.name}\n                  description={\n                    AUTOCOMPLETE.props.label.description\n                  }\n                  type={AUTOCOMPLETE.props.label.type}\n                  defaultValue={\n                    AUTOCOMPLETE.props.label.default\n                  }\n                />\n                <RenderProps\n                  ref={propsRef[3]}\n                  propName={AUTOCOMPLETE.props.open.name}\n                  description={\n                    AUTOCOMPLETE.props.open.description\n                  }\n                  type={AUTOCOMPLETE.props.open.type}\n                  defaultValue={AUTOCOMPLETE.props.open.default}\n                />\n                <RenderProps\n                  ref={propsRef[4]}\n                  propName={AUTOCOMPLETE.props.placeholder.name}\n                  description={\n                    AUTOCOMPLETE.props.placeholder.description\n                  }\n                  type={AUTOCOMPLETE.props.placeholder.type}\n                  defaultValue={\n                    AUTOCOMPLETE.props.placeholder.default\n                  }\n                />\n                <RenderProps\n                  ref={propsRef[5]}\n                  propName={AUTOCOMPLETE.props.options.name}\n                  description={\n                    AUTOCOMPLETE.props.options.description\n                  }\n                  type={AUTOCOMPLETE.props.options.type}\n                  defaultValue={\n                    AUTOCOMPLETE.props.options.default\n                  }\n                  wordSpacing=\"4px\"\n                />\n  \n                <RenderProps\n                  ref={propsRef[6]}\n                  propName={AUTOCOMPLETE.props.color.name}\n                  description={AUTOCOMPLETE.props.color.description}\n                  type={AUTOCOMPLETE.props.color.type}\n                  defaultValue={AUTOCOMPLETE.props.color.default}\n                  marginTop=\"1rem\"\n                />\n                <RenderProps\n                  ref={propsRef[7]}\n                  propName={AUTOCOMPLETE.props.onClick.name}\n                  description={AUTOCOMPLETE.props.onClick.description}\n                  type={AUTOCOMPLETE.props.onClick.type}\n                  defaultValue={AUTOCOMPLETE.props.onClick.default}\n                />\n                {!laptop && renderSideBarItem([\n                  AUTOCOMPLETE.props.variant.name,\n                  AUTOCOMPLETE.props.size.name,\n                  AUTOCOMPLETE.props.label.name,\n                  AUTOCOMPLETE.props.open.name,\n                  AUTOCOMPLETE.props.placeholder.name,\n                  AUTOCOMPLETE.props.options.name,\n                  AUTOCOMPLETE.props.color.name,\n                  AUTOCOMPLETE.props.onClick.name,\n                ], selectedPropsSideBarItem, propsRef)}\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </div>\n      </div>\n    );\n}\nexport default AutocompleteDisplay;\n\nconst options = [\n  { value: \"1\", title: \"Option 1\" },\n  { value: \"2\", title: \"Option 2\" },\n  { value: \"3\", title: \"Option 3\" },\n]\n\nconst CODE_1 = (\n  <div\n    style={{\n      display: \"flex\",\n      gap: \"2rem\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    }}\n  >\n    <Autocomplete color=\"component\" variant=\"contained\" placeholder=\"Search here\" options={options}/>\n    <Autocomplete color=\"component\" variant=\"outlined\" placeholder=\"Search here\" options={options}/>\n    <Autocomplete color=\"component\" variant=\"soft\" placeholder=\"Search here\" options={options}/>\n  </div>\n);\nconst TEXT_1 = `const options = [\n  { value: \"1\", title: \"Option 1\" },\n  { value: \"2\", title: \"Option 2\" },\n  { value: \"3\", title: \"Option 3\" },\n]\n\n<Autocomplete variant=\"contained\" placeholder=\"Search here\" options={options}/>\n<Autocomplete variant=\"outlined\" placeholder=\"Search here\" options={options}/>\n<Autocomplete variant=\"soft\" placeholder=\"Search here\" options={options}/>\n`;\n\nconst CODE_2 = (\n  <div\n    style={{\n      display: \"flex\",\n      gap: \"2rem\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    }}\n  >\n    <Autocomplete color=\"component\" size=\"small\" placeholder=\"Search here\" options={options}/>\n    <Autocomplete color=\"component\" size=\"medium\" placeholder=\"Search here\" options={options}/>\n    <Autocomplete color=\"component\" size=\"large\" placeholder=\"Search here\" options={options}/>\n  </div>\n);\nconst TEXT_2 = `const options = [\n  { value: \"1\", title: \"Option 1\" },\n  { value: \"2\", title: \"Option 2\" },\n  { value: \"3\", title: \"Option 3\" },\n]\n\n<Autocomplete size=\"small\" placeholder=\"Search here\" options={options}/>\n<Autocomplete size=\"medium\" placeholder=\"Search here\" options={options}/>\n<Autocomplete size=\"large\" placeholder=\"Search here\" options={options}/>\n`;"],"names":["AUTOCOMPLETE","i18n","AutocompleteDisplay","windowSize","useWindowSize","laptop","width","mobile","colorPalette","useTheme","theme","variationRefs","Array","from","length","React","propsRef","selectedTab","setSelectedTab","selectedVariationSideBarItem","setSelectedVariationSideBarItem","selectedPropsSideBarItem","setSeletedPropsSideBarItem","textColor","primary","appearance","handleScroll","i","_variationRefs$i$curr","current","getBoundingClientRect","top","_propsRef$i$current","window","addEventListener","removeEventListener","_jsxs","style","margin","children","_jsx","RenderBreadcrumbsForComponent","name","title","path","padding","RenderComponentHeading","description","Tabs","color","marginTop","value","onChange","RenderTabsList","TabPanels","height","backgroundColor","accentScale","TabPanel","RenderVariations","ref","label","usage","installation","text","variants","code","CODE_1","TEXT_1","sizes","CODE_2","TEXT_2","renderSideBarItem","Text","preciseColor","size","props","_label","RenderProps","propName","variant","type","defaultValue","default","open","placeholder","options","wordSpacing","onClick","display","gap","flexWrap","justifyContent","alignItems","Autocomplete"],"sourceRoot":""}