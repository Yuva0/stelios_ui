{"version":3,"file":"static/js/664.2fb42870.chunk.js","mappings":"+LAqBA,MAAMA,EAAUC,EAAAA,GA8HhB,EA7H6BC,KAC3B,MAAMC,GAAaC,EAAAA,EAAAA,MACbC,EAASF,EAAWG,MAAQ,IAC5BC,EAASJ,EAAWG,MAAQ,IAE5BE,GADQC,EAAAA,EAAAA,MAAWC,MACEF,aAErBG,EAAgBC,MAAMC,KAAK,CAAEC,OAAQ,IAAK,IAC9CC,EAAAA,cAEIC,EAAWJ,MAAMC,KAAK,CAAEC,OAAQ,KAAM,IAC1CC,EAAAA,eAEKE,EAAaC,GAAkBH,EAAAA,SAAe,UAC9CI,EAA8BC,GACnCL,EAAAA,SAAe,IACVM,EAA0BC,GAC/BP,EAAAA,SAAe,GAEXQ,EACgC,UAApCf,EAAagB,QAAQC,WAAyB,QAAU,QA4BxD,OA1BFV,EAAAA,WAAgB,KACd,MAAMW,EAAeA,KACnB,GAAoB,UAAhBT,EACF,IAAK,IAAIU,EAAI,EAAGA,EAAIhB,EAAcG,OAAQa,IAAK,CAAC,IAADC,EAC7C,IAA4B,QAAxBA,EAAAjB,EAAcgB,GAAGE,eAAO,IAAAD,OAAA,EAAxBA,EAA0BE,wBAAwBC,KAAO,EAE3D,YADAX,EAAgCO,EAGpC,MACK,GAAoB,UAAhBV,EACT,IAAK,IAAIU,EAAI,EAAGA,EAAIX,EAASF,OAAQa,IAAK,CAAC,IAADK,EACxC,IAAuB,QAAnBA,EAAAhB,EAASW,GAAGE,eAAO,IAAAG,OAAA,EAAnBA,EAAqBF,wBAAwBC,KAAO,EAEtD,YADAT,EAA2BK,EAG/B,CACF,EAKF,OAFAM,OAAOC,iBAAiB,SAAUR,GAE3B,KACLO,OAAOE,oBAAoB,SAAUT,EAAa,CACnD,GACA,CAACf,EAAeK,EAAUC,KAGzBmB,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,OAAQ,kBAAmBhC,MAAOD,EAAS,OAASE,EAAS,qBAAuB,sBAAuBgC,SAAA,EACvHC,EAAAA,EAAAA,KAACC,EAAAA,GAA6B,CAACC,KAAM1C,EAAQ2C,MAAOC,KAAM5C,EAAQ4C,QAElER,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEQ,QAAS,QAASN,SAAA,EAC9BC,EAAAA,EAAAA,KAACM,EAAAA,GAAsB,CACrBH,MAAO3C,EAAQ2C,MACfI,YAAa/C,EAAQ+C,eAGvBX,EAAAA,EAAAA,MAACY,EAAAA,GAAI,CAACC,MAAM,UAAUZ,MAAO,CAAEa,UAAW,QACxCC,MAAOlC,EACPmC,SAAWD,GAAUjC,EAAeiC,GAAOZ,SAAA,EAC1Cc,EAAAA,EAAAA,OACDjB,EAAAA,EAAAA,MAACkB,EAAAA,GAAS,CAAAf,SAAA,EACRC,EAAAA,EAAAA,KAAA,OACEH,MAAO,CACLkB,OAAQ,MACRjD,MAAO,OACPkD,gBAAiBhD,EAAagB,QAAQiC,YAAY,GAClDP,UAAW,WAGfd,EAAAA,EAAAA,MAACsB,EAAAA,GAAQ,CAACP,MAAM,QAAOZ,SAAA,EACrBC,EAAAA,EAAAA,KAACmB,EAAAA,GAAgB,CACfC,IAAKjD,EAAc,GACnBkD,MAAO7D,EAAQ8D,MAAMC,aAAaF,MAClCG,KAAMhE,EAAQ8D,MAAMC,aAAahB,eAEnCP,EAAAA,EAAAA,KAACmB,EAAAA,GAAgB,CACfC,IAAKjD,EAAc,GACnBkD,MAAO7D,EAAQ8D,MAAMG,MAAMJ,MAC3Bd,YAAa/C,EAAQ8D,MAAMG,MAAMlB,YACjCmB,KAAMC,EACNH,KAAMI,KAEN7D,IAAU8D,EAAAA,EAAAA,IAAkB,CAACrE,EAAQ8D,MAAMC,aAAaF,MAAO7D,EAAQ8D,MAAMG,MAAMJ,OAAQ1C,EAA8BR,OAE7HyB,EAAAA,EAAAA,MAACsB,EAAAA,GAAQ,CAACP,MAAM,QAAOZ,SAAA,EACrBC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAI,CACHC,aAAchD,EACdiD,KAAK,QACLnC,MAAO,CAAEa,UAAW,QAASX,SAE5BvC,EAAQyE,MAAMC,UAEjBlC,EAAAA,EAAAA,KAACmC,EAAAA,GAAW,CACVf,IAAK5C,EAAS,GACd4D,SAAU5E,EAAQyE,MAAMlC,SAASG,KACjCK,YACE/C,EAAQyE,MAAMlC,SAASQ,YAEzB8B,KAAM7E,EAAQyE,MAAMlC,SAASsC,KAC7BC,aACE9E,EAAQyE,MAAMlC,SAASwC,QAEzB7B,UAAU,UAEZV,EAAAA,EAAAA,KAACmC,EAAAA,GAAW,CACVf,IAAK5C,EAAS,GACd4D,SAAU5E,EAAQyE,MAAMxB,MAAMP,KAC9BK,YACE/C,EAAQyE,MAAMxB,MAAMF,YAEtB8B,KAAM7E,EAAQyE,MAAMxB,MAAM4B,KAC1BC,aACE9E,EAAQyE,MAAMxB,MAAM8B,WAGtBxE,IAAU8D,EAAAA,EAAAA,IAAkB,CAACrE,EAAQyE,MAAMlC,SAASG,KAAM1C,EAAQyE,MAAMxB,MAAMP,MAAOrB,EAA0BL,iBAKrH,EAKNmD,GACJ3B,EAAAA,EAAAA,KAAA,OACEH,MAAO,CACL2C,QAAS,OACTC,IAAK,OACLC,SAAU,OACVC,eAAgB,SAChBC,WAAY,UACZ7C,UAEFH,EAAAA,EAAAA,MAACiD,EAAAA,GAAO,CAAChD,MAAO,CAACiD,SAAU,SAAU/B,OAAQ,QAASN,MAAM,YAAWV,SAAA,EACrEC,EAAAA,EAAAA,KAAC+C,EAAAA,GAAW,CAACtC,MAAM,UAAUuC,UAAQ,EAAAjD,SAAC,kBAGtCC,EAAAA,EAAAA,KAAC+C,EAAAA,GAAW,CAACtC,MAAM,UAASV,SAAC,eAI7B6B,EAAS,2K","sources":["content/SideBarDisplay.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Text,\n  useTheme,\n  SideBar,\n  SideBarItem,\n  Tabs,\n  TabPanels,\n  TabPanel,\n} from \"stelios\";\nimport {\n  RenderBreadcrumbsForComponent,\n  RenderComponentHeading,\n  RenderProps,\n  renderSideBarItem,\n  RenderTabsList,\n  RenderVariations,\n  useWindowSize,\n} from \"../helpers/helpers\";\nimport i18n from \"../i18n/i18n_en.json\";\n\nconst SIDEBAR = i18n[\"sidebar\"];\nconst NavigationBarDisplay = () => {  \n  const windowSize = useWindowSize();\n  const mobile = windowSize.width < 480;\n  const laptop = windowSize.width < 768;\n  const theme = useTheme().theme!;\n  const colorPalette = theme.colorPalette;\n\n  const variationRefs = Array.from({ length: 3 }, () =>\n    React.createRef<HTMLDivElement>()\n  );\n  const propsRef = Array.from({ length: 11 }, () =>\n    React.createRef<HTMLDivElement>()\n  );\n  const [selectedTab, setSelectedTab] = React.useState(\"usage\");\n  const [selectedVariationSideBarItem, setSelectedVariationSideBarItem] =\n    React.useState(0);\n  const [selectedPropsSideBarItem, setSeletedPropsSideBarItem] =\n    React.useState(0);\n\n  const textColor =\n    colorPalette.primary.appearance === \"light\" ? \"black\" : \"white\";\n\n  React.useEffect(() => {\n    const handleScroll = () => {\n      if (selectedTab === \"usage\") {\n        for (let i = 0; i < variationRefs.length; i++) {\n          if (variationRefs[i].current?.getBoundingClientRect().top! > 0) {\n            setSelectedVariationSideBarItem(i);\n            return;\n          }\n        }\n      } else if (selectedTab === \"props\") {\n        for (let i = 0; i < propsRef.length; i++) {\n          if (propsRef[i].current?.getBoundingClientRect().top! > 0) {\n            setSeletedPropsSideBarItem(i);\n            return;\n          }\n        }\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [variationRefs, propsRef, selectedTab]);\n\n    return (\n      <div style={{ margin: \"1.5rem 0 4rem 0\", width: mobile ? \"100%\" : laptop ? \"calc(100% - 12rem)\" : \"calc(100% - 22rem)\" }}>\n        <RenderBreadcrumbsForComponent name={SIDEBAR.title} path={SIDEBAR.path}/>\n  \n        <div style={{ padding: \"1rem\" }}>\n          <RenderComponentHeading\n            title={SIDEBAR.title}\n            description={SIDEBAR.description}\n          />\n  \n          <Tabs color=\"primary\" style={{ marginTop: \"2rem\" }} \n            value={selectedTab}\n            onChange={(value) => setSelectedTab(value)}>\n            {RenderTabsList()}\n            <TabPanels>\n              <div\n                style={{\n                  height: \"1px\",\n                  width: \"100%\",\n                  backgroundColor: colorPalette.primary.accentScale[9],\n                  marginTop: \"1rem\",\n                }}\n              />\n              <TabPanel value=\"usage\">\n                <RenderVariations\n                  ref={variationRefs[0]}\n                  label={SIDEBAR.usage.installation.label}\n                  text={SIDEBAR.usage.installation.description}\n                />\n                <RenderVariations\n                  ref={variationRefs[1]}\n                  label={SIDEBAR.usage.group.label}\n                  description={SIDEBAR.usage.group.description}\n                  code={CODE_1}\n                  text={TEXT_1}\n                />\n                {!laptop && renderSideBarItem([SIDEBAR.usage.installation.label, SIDEBAR.usage.group.label], selectedVariationSideBarItem, variationRefs)}\n              </TabPanel>\n              <TabPanel value=\"props\">\n                <Text\n                  preciseColor={textColor}\n                  size=\"large\"\n                  style={{ marginTop: \"2rem\" }}\n                >\n                  {SIDEBAR.props._label}\n                </Text>\n                <RenderProps\n                  ref={propsRef[0]}\n                  propName={SIDEBAR.props.children.name}\n                  description={\n                    SIDEBAR.props.children.description\n                  }\n                  type={SIDEBAR.props.children.type}\n                  defaultValue={\n                    SIDEBAR.props.children.default\n                  }\n                  marginTop=\"1rem\"\n                />\n                <RenderProps\n                  ref={propsRef[1]}\n                  propName={SIDEBAR.props.color.name}\n                  description={\n                    SIDEBAR.props.color.description\n                  }\n                  type={SIDEBAR.props.color.type}\n                  defaultValue={\n                    SIDEBAR.props.color.default\n                  }\n                />\n                {!laptop && renderSideBarItem([SIDEBAR.props.children.name, SIDEBAR.props.color.name], selectedPropsSideBarItem, propsRef)}\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </div>\n      </div>\n    );\n}\nexport default NavigationBarDisplay;\n\nconst CODE_1 = (\n  <div\n    style={{\n      display: \"flex\",\n      gap: \"2rem\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    }}\n  >\n    <SideBar style={{position: \"sticky\", height: \"100%\"}} color=\"component\">\n      <SideBarItem color=\"primary\" selected>\n        Installation\n      </SideBarItem>\n      <SideBarItem color=\"primary\">Sizes</SideBarItem>\n    </SideBar>\n  </div>\n);\nconst TEXT_1 = `<SideBar color=\"component\">\n  <SideBarItem color=\"primary\" selected>\n    Installation\n  </SideBarItem>\n  <SideBarItem color=\"primary\">Sizes</SideBarItem>\n</SideBar>`;"],"names":["SIDEBAR","i18n","NavigationBarDisplay","windowSize","useWindowSize","mobile","width","laptop","colorPalette","useTheme","theme","variationRefs","Array","from","length","React","propsRef","selectedTab","setSelectedTab","selectedVariationSideBarItem","setSelectedVariationSideBarItem","selectedPropsSideBarItem","setSeletedPropsSideBarItem","textColor","primary","appearance","handleScroll","i","_variationRefs$i$curr","current","getBoundingClientRect","top","_propsRef$i$current","window","addEventListener","removeEventListener","_jsxs","style","margin","children","_jsx","RenderBreadcrumbsForComponent","name","title","path","padding","RenderComponentHeading","description","Tabs","color","marginTop","value","onChange","RenderTabsList","TabPanels","height","backgroundColor","accentScale","TabPanel","RenderVariations","ref","label","usage","installation","text","group","code","CODE_1","TEXT_1","renderSideBarItem","Text","preciseColor","size","props","_label","RenderProps","propName","type","defaultValue","default","display","gap","flexWrap","justifyContent","alignItems","SideBar","position","SideBarItem","selected"],"sourceRoot":""}