{"version":3,"file":"static/js/82.2353b858.chunk.js","mappings":"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","sources":["content/SelectDisplay.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Text,\n  useTheme,\n  Tabs,\n  TabPanels,\n  TabPanel,\n  Select,\n} from \"stelios\";\nimport {\n  RenderBreadcrumbsForComponent,\n  RenderComponentHeading,\n  RenderProps,\n  renderSideBarItem,\n  RenderTabsList,\n  RenderVariations,\n  useWindowSize,\n} from \"../helpers/helpers\";\nimport i18n from \"../i18n/i18n_en.json\";\n\nconst SELECT = i18n.select;\nconst SelectDisplay = () => {\n  const laptop = useWindowSize().width < 768;\n  const mobile = useWindowSize().width < 480;\n  const theme = useTheme().theme!;\n  const colorPalette = theme.colorPalette;\n\n  const variationRefs = Array.from({ length: 3 }, () =>\n    React.createRef<HTMLDivElement>()\n  );\n  const propsRef = Array.from({ length: 11 }, () =>\n    React.createRef<HTMLDivElement>()\n  );\n  const [selectedTab, setSelectedTab] = React.useState(\"usage\");\n  const [selectedVariationSideBarItem, setSelectedVariationSideBarItem] =\n    React.useState(0);\n  const [selectedPropsSideBarItem, setSeletedPropsSideBarItem] =\n    React.useState(0);\n\n  const textColor =\n    colorPalette.primary.appearance === \"light\" ? \"black\" : \"white\";\n\n  React.useEffect(() => {\n    const handleScroll = () => {\n      if (selectedTab === \"usage\") {\n        for (let i = 0; i < variationRefs.length; i++) {\n          if (variationRefs[i].current?.getBoundingClientRect().top! > 0) {\n            setSelectedVariationSideBarItem(i);\n            return;\n          }\n        }\n      } else if (selectedTab === \"props\") {\n        for (let i = 0; i < propsRef.length; i++) {\n          if (propsRef[i].current?.getBoundingClientRect().top! > 0) {\n            setSeletedPropsSideBarItem(i);\n            return;\n          }\n        }\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [variationRefs, propsRef, selectedTab]);\n\n    return (\n      <div style={{ margin: \"1.5rem 0 4rem 0\", width: mobile ? \"100%\" : laptop ? \"calc(100% - 12rem)\" : \"calc(100% - 22rem)\"}}>\n        <RenderBreadcrumbsForComponent name={SELECT.title} path={SELECT.path}/>\n  \n        <div style={{ padding: \"1rem\" }}>\n          <RenderComponentHeading\n            title={SELECT.title}\n            description={SELECT.description}\n          />\n  \n          <Tabs color=\"primary\" style={{ marginTop: \"2rem\" }} \n            value={selectedTab}\n            onChange={(value) => setSelectedTab(value)}>\n            {RenderTabsList()}\n            <TabPanels>\n              <div\n                style={{\n                  height: \"1px\",\n                  width: \"100%\",\n                  backgroundColor: colorPalette.primary.accentScale[9],\n                  marginTop: \"1rem\",\n                }}\n              />\n              <TabPanel value=\"usage\">\n                <RenderVariations\n                  ref={variationRefs[0]}\n                  label={SELECT.usage.installation.label}\n                  text={SELECT.usage.installation.description}\n                />\n                <RenderVariations\n                  ref={variationRefs[1]}\n                  label={SELECT.usage.variants.label}\n                  description={SELECT.usage.variants.description}\n                  code={CODE_1}\n                  text={TEXT_1}\n                />\n                <RenderVariations\n                  ref={variationRefs[2]}\n                  label={SELECT.usage.sizes.label}\n                  description={SELECT.usage.sizes.description}\n                  code={CODE_2}\n                  text={TEXT_2}\n                />\n  \n                {!laptop && renderSideBarItem([SELECT.usage.installation.label, SELECT.usage.variants.label, SELECT.usage.sizes.label], selectedVariationSideBarItem, variationRefs)}\n              </TabPanel>\n              <TabPanel value=\"props\">\n                <Text\n                  preciseColor={textColor}\n                  size=\"large\"\n                  style={{ marginTop: \"2rem\" }}\n                >\n                  {SELECT.props._label}\n                </Text>\n                <RenderProps\n                  ref={propsRef[0]}\n                  propName={SELECT.props.variant.name}\n                  description={\n                    SELECT.props.variant.description\n                  }\n                  type={SELECT.props.variant.type}\n                  defaultValue={\n                    SELECT.props.variant.default\n                  }\n                  marginTop=\"1rem\"\n                />\n                <RenderProps\n                  ref={propsRef[1]}\n                  propName={SELECT.props.size.name}\n                  description={\n                    SELECT.props.size.description\n                  }\n                  type={SELECT.props.size.type}\n                  defaultValue={\n                    SELECT.props.size.default\n                  }\n                />\n                <RenderProps\n                  ref={propsRef[2]}\n                  propName={SELECT.props.label.name}\n                  description={\n                    SELECT.props.label.description\n                  }\n                  type={SELECT.props.label.type}\n                  defaultValue={\n                    SELECT.props.label.default\n                  }\n                />\n                <RenderProps\n                  ref={propsRef[3]}\n                  propName={SELECT.props.open.name}\n                  description={\n                    SELECT.props.open.description\n                  }\n                  type={SELECT.props.open.type}\n                  defaultValue={SELECT.props.open.default}\n                />\n                <RenderProps\n                  ref={propsRef[4]}\n                  propName={SELECT.props.placeholder.name}\n                  description={\n                    SELECT.props.placeholder.description\n                  }\n                  type={SELECT.props.placeholder.type}\n                  defaultValue={\n                    SELECT.props.placeholder.default\n                  }\n                />\n                <RenderProps\n                  ref={propsRef[5]}\n                  propName={SELECT.props.options.name}\n                  description={\n                    SELECT.props.options.description\n                  }\n                  type={SELECT.props.options.type}\n                  defaultValue={\n                    SELECT.props.options.default\n                  }\n                  wordSpacing=\"4px\"\n                />\n  \n                <RenderProps\n                  ref={propsRef[6]}\n                  propName={SELECT.props.color.name}\n                  description={SELECT.props.color.description}\n                  type={SELECT.props.color.type}\n                  defaultValue={SELECT.props.color.default}\n                  marginTop=\"1rem\"\n                />\n                <RenderProps\n                  ref={propsRef[7]}\n                  propName={SELECT.props.onClick.name}\n                  description={SELECT.props.onClick.description}\n                  type={SELECT.props.onClick.type}\n                  defaultValue={SELECT.props.onClick.default}\n                />\n  \n                {!laptop && renderSideBarItem([SELECT.props.variant.name, SELECT.props.size.name, SELECT.props.label.name, SELECT.props.open.name, SELECT.props.placeholder.name, SELECT.props.options.name, SELECT.props.color.name, SELECT.props.onClick.name], selectedPropsSideBarItem, propsRef)}\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </div>\n      </div>\n    );\n}\nexport default SelectDisplay;\n\nconst options = [\n  { value: \"1\", title: \"Option 1\" },\n  { value: \"2\", title: \"Option 2\" },\n  { value: \"3\", title: \"Option 3\" },\n]\n\nconst CODE_1 = (\n  <div\n    style={{\n      display: \"flex\",\n      gap: \"2rem\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    }}\n  >\n    <Select color=\"component\" variant=\"contained\" placeholder=\"Search here\" options={options}/>\n    <Select color=\"component\" variant=\"outlined\" placeholder=\"Search here\" options={options}/>\n    <Select color=\"component\" variant=\"soft\" placeholder=\"Search here\" options={options}/>\n  </div>\n);\nconst TEXT_1 = `const options = [\n  { value: \"1\", title: \"Option 1\" },\n  { value: \"2\", title: \"Option 2\" },\n  { value: \"3\", title: \"Option 3\" },\n]\n\n<Select variant=\"contained\" placeholder=\"Search here\" options={options}/>\n<Select variant=\"outlined\" placeholder=\"Search here\" options={options}/>\n<Select variant=\"soft\" placeholder=\"Search here\" options={options}/>\n`;\n\nconst CODE_2 = (\n  <div\n    style={{\n      display: \"flex\",\n      gap: \"2rem\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    }}\n  >\n    <Select color=\"component\" size=\"small\" placeholder=\"Search here\" options={options}/>\n    <Select color=\"component\" size=\"medium\" placeholder=\"Search here\" options={options}/>\n    <Select color=\"component\" size=\"large\" placeholder=\"Search here\" options={options}/>\n  </div>\n);\nconst TEXT_2 = `const options = [\n  { value: \"1\", title: \"Option 1\" },\n  { value: \"2\", title: \"Option 2\" },\n  { value: \"3\", title: \"Option 3\" },\n]\n\n<Select size=\"small\" placeholder=\"Search here\" options={options}/>\n<Select size=\"medium\" placeholder=\"Search here\" options={options}/>\n<Select size=\"large\" placeholder=\"Search here\" options={options}/>\n`;"],"names":["SELECT","i18n","SelectDisplay","laptop","useWindowSize","width","mobile","colorPalette","useTheme","theme","variationRefs","Array","from","length","React","propsRef","selectedTab","setSelectedTab","selectedVariationSideBarItem","setSelectedVariationSideBarItem","selectedPropsSideBarItem","setSeletedPropsSideBarItem","textColor","primary","appearance","handleScroll","i","_variationRefs$i$curr","current","getBoundingClientRect","top","_propsRef$i$current","window","addEventListener","removeEventListener","_jsxs","style","margin","children","_jsx","RenderBreadcrumbsForComponent","name","title","path","padding","RenderComponentHeading","description","Tabs","color","marginTop","value","onChange","RenderTabsList","TabPanels","height","backgroundColor","accentScale","TabPanel","RenderVariations","ref","label","usage","installation","text","variants","code","CODE_1","TEXT_1","sizes","CODE_2","TEXT_2","renderSideBarItem","Text","preciseColor","size","props","_label","RenderProps","propName","variant","type","defaultValue","default","open","placeholder","options","wordSpacing","onClick","display","gap","flexWrap","justifyContent","alignItems","Select"],"sourceRoot":""}