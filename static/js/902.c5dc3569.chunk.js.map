{"version":3,"file":"static/js/902.c5dc3569.chunk.js","mappings":"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","sources":["content/LinkDisplay.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Text,\n  useTheme,\n  Tabs,\n  TabPanels,\n  TabPanel,\n  Link\n} from \"stelios\";\nimport {\n  RenderBreadcrumbsForComponent,\n  RenderComponentHeading,\n  RenderProps,\n  renderSideBarItem,\n  RenderTabsList,\n  RenderVariations,\n  useWindowSize,\n} from \"../helpers/helpers\";\nimport i18n from \"../i18n/i18n_en.json\";\n\nconst LINK = i18n.link;\nconst LinkDisplay = () => {\n  const windowSize = useWindowSize();\n  const laptop = windowSize.width < 768;\n  const mobile = windowSize.width < 480;\n  const theme = useTheme().theme!;\n  const colorPalette = theme.colorPalette;\n\n  const variationRefs = Array.from({ length: 3 }, () =>\n    React.createRef<HTMLDivElement>()\n  );\n  const propsRef = Array.from({ length: 16 }, () =>\n    React.createRef<HTMLDivElement>()\n  );\n  const [selectedTab, setSelectedTab] = React.useState(\"usage\");\n  const [selectedVariationSideBarItem, setSelectedVariationSideBarItem] =\n    React.useState(0);\n  const [selectedPropsSideBarItem, setSeletedPropsSideBarItem] =\n    React.useState(0);\n\n  const textColor =\n    colorPalette.primary.appearance === \"light\" ? \"black\" : \"white\";\n\n  React.useEffect(() => {\n    const handleScroll = () => {\n      if (selectedTab === \"usage\") {\n        for (let i = 0; i < variationRefs.length; i++) {\n          if (variationRefs[i].current?.getBoundingClientRect().top! > 0) {\n            setSelectedVariationSideBarItem(i);\n            return;\n          }\n        }\n      } else if (selectedTab === \"props\") {\n        for (let i = 0; i < propsRef.length; i++) {\n          if (propsRef[i].current?.getBoundingClientRect().top! > 0) {\n            setSeletedPropsSideBarItem(i);\n            return;\n          }\n        }\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [variationRefs, propsRef, selectedTab]);\n\n  return (\n    <div style={{ margin: \"1.5rem 0 4rem 0\", width: mobile ? \"100%\" : laptop ? \"calc(100% - 12rem)\" : \"calc(100% - 22rem)\" }}>\n      <RenderBreadcrumbsForComponent name={LINK.title} path={LINK.path}/>\n\n      <div style={{ padding: \"1rem\" }}>\n        <RenderComponentHeading\n          title={LINK.title}\n          description={LINK.description}\n        />\n\n        <Tabs color=\"primary\" style={{ marginTop: \"2rem\" }} \n          value={selectedTab}\n          onChange={(value) => setSelectedTab(value)}>\n          {RenderTabsList()}\n          <TabPanels>\n            <div\n              style={{\n                height: \"1px\",\n                width: \"100%\",\n                backgroundColor: colorPalette.primary.accentScale[9],\n                marginTop: \"1rem\",\n              }}\n            />\n            <TabPanel value=\"usage\">\n              <RenderVariations\n                ref={variationRefs[0]}\n                label={LINK.usage.installation.label}\n                text={LINK.usage.installation.description}\n              />\n              <RenderVariations\n                ref={variationRefs[1]}\n                label={LINK.usage.variants.label}\n                description={LINK.usage.variants.description}\n                code={CODE_1}\n                text={TEXT_1}\n              />\n              <RenderVariations\n                ref={variationRefs[2]}\n                label={LINK.usage.sizes.label}\n                description={LINK.usage.sizes.description}\n                code={CODE_2}\n                text={TEXT_2}\n              />\n              {!laptop && renderSideBarItem([LINK.usage.installation.label, LINK.usage.variants.label, LINK.usage.sizes.label], selectedVariationSideBarItem, variationRefs)}\n            </TabPanel>\n            <TabPanel value=\"props\">\n              <Text\n                preciseColor={textColor}\n                size=\"large\"\n                style={{ marginTop: \"2rem\" }}\n              >\n                {LINK.props._label}\n              </Text>\n              <RenderProps\n                ref={propsRef[0]}\n                propName={LINK.props.variant.name}\n                description={\n                  LINK.props.variant.description\n                }\n                type={LINK.props.variant.type}\n                defaultValue={\n                  LINK.props.variant.default\n                }\n                marginTop=\"1rem\"\n              />\n              <RenderProps\n                ref={propsRef[1]}\n                propName={LINK.props.size.name}\n                description={\n                  LINK.props.size.description\n                }\n                type={LINK.props.size.type}\n                defaultValue={\n                  LINK.props.size.default\n                }\n                marginTop=\"1rem\"\n              />\n              <RenderProps\n                ref={propsRef[2]}\n                propName={LINK.props.href.name}\n                description={\n                  LINK.props.href.description\n                }\n                type={LINK.props.href.type}\n                defaultValue={\n                  LINK.props.href.default\n                }\n                marginTop=\"1rem\"\n              />\n              <RenderProps\n                ref={propsRef[3]}\n                propName={LINK.props.target.name}\n                description={\n                  LINK.props.target.description\n                }\n                type={LINK.props.target.type}\n                defaultValue={\n                  LINK.props.target.default\n                }\n                marginTop=\"1rem\"\n              />\n              <RenderProps\n                ref={propsRef[4]}\n                propName={LINK.props.color.name}\n                description={\n                  LINK.props.color.description\n                }\n                type={LINK.props.color.type}\n                defaultValue={\n                  LINK.props.color.default\n                }\n              />\n              <RenderProps\n                ref={propsRef[5]}\n                propName={LINK.props.children.name}\n                description={\n                  LINK.props.children.description\n                }\n                type={LINK.props.children.type}\n                defaultValue={\n                  LINK.props.children.default\n                }\n              />\n              {!laptop && renderSideBarItem([LINK.props.variant.name, LINK.props.size.name, LINK.props.href.name, LINK.props.target.name, LINK.props.color.name, LINK.props.children.name], selectedPropsSideBarItem, propsRef)}\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </div>\n    </div>\n  );\n}\n\nexport default LinkDisplay;\n\nconst CODE_1 = (\n  <div\n    style={{\n      display: \"flex\",\n      gap: \"2rem\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    }}\n  >\n    <Link href=\"#\" color=\"component\" variant=\"default\"> Default Link </Link>\n    <Link href=\"#\" color=\"component\" variant=\"underline\"> Underline Link </Link>\n    <Link href=\"#\" color=\"component\" variant=\"hover\"> None Link </Link>\n  </div>\n);\nconst TEXT_1 = `<Link href=\"#\" color=\"component\" variant=\"default\"> Default Link </Link>\n<Link href=\"#\" color=\"component\" variant=\"underline\"> Underline Link </Link>\n<Link href=\"#\" color=\"component\" variant=\"hover\"> None Link </Link>\n`;\n\nconst CODE_2 = (\n  <div\n    style={{\n      display: \"flex\",\n      gap: \"2rem\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    }}\n  >\n    <Link href=\"#\" color=\"component\" size=\"small\"> Small Link </Link>\n    <Link href=\"#\" color=\"component\" size=\"medium\"> Medium Link </Link>\n    <Link href=\"#\" color=\"component\" size=\"large\"> Large Link </Link>\n  </div>\n);\nconst TEXT_2 = `<Link href=\"#\" color=\"component\" size=\"small\"> Small Link </Link>\n<Link href=\"#\" color=\"component\" size=\"medium\"> Medium Link </Link>\n<Link href=\"#\" color=\"component\" size=\"large\"> Large Link </Link>\n`;"],"names":["LINK","i18n","LinkDisplay","windowSize","useWindowSize","laptop","width","mobile","colorPalette","useTheme","theme","variationRefs","Array","from","length","React","propsRef","selectedTab","setSelectedTab","selectedVariationSideBarItem","setSelectedVariationSideBarItem","selectedPropsSideBarItem","setSeletedPropsSideBarItem","textColor","primary","appearance","handleScroll","i","_variationRefs$i$curr","current","getBoundingClientRect","top","_propsRef$i$current","window","addEventListener","removeEventListener","_jsxs","style","margin","children","_jsx","RenderBreadcrumbsForComponent","name","title","path","padding","RenderComponentHeading","description","Tabs","color","marginTop","value","onChange","RenderTabsList","TabPanels","height","backgroundColor","accentScale","TabPanel","RenderVariations","ref","label","usage","installation","text","variants","code","CODE_1","TEXT_1","sizes","CODE_2","TEXT_2","renderSideBarItem","Text","preciseColor","size","props","_label","RenderProps","propName","variant","type","defaultValue","default","href","target","display","gap","flexWrap","justifyContent","alignItems","Link"],"sourceRoot":""}