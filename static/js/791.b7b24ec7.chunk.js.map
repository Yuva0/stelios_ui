{"version":3,"file":"static/js/791.b7b24ec7.chunk.js","mappings":"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","sources":["content/IconButtonDisplay.tsx","../node_modules/@tabler/icons-react/src/icons/IconAwardFilled.ts"],"sourcesContent":["import * as React from \"react\";\nimport {\n  Text,\n  useTheme,\n  Tabs,\n  TabPanels,\n  TabPanel,\n  IconButton,\n} from \"stelios\";\nimport { IconAwardFilled } from \"@tabler/icons-react\";\nimport {\n  RenderBreadcrumbsForComponent,\n  RenderComponentHeading,\n  RenderProps,\n  renderSideBarItem,\n  RenderTabsList,\n  RenderVariations,\n  useWindowSize,\n} from \"../helpers/helpers\";\nimport i18n from \"../i18n/i18n_en.json\";\n\nconst ICONBUTTON = i18n.iconButton;\n\nconst IconButtonDisplay = () => {\n  const windowSize = useWindowSize();\n  const laptop = windowSize.width < 768;\n  const mobile = windowSize.width < 480;\n  const theme = useTheme().theme!;\n  const colorPalette = theme.colorPalette;\n  const variationRefs = Array.from({ length: 4 }, () => React.createRef<HTMLDivElement>());\n  const propsRef = Array.from({ length: 7 }, () => React.createRef<HTMLDivElement>());\n  const [selectedTab, setSelectedTab] = React.useState(\"usage\");\n  const [selectedVariationSideBarItem, setSelectedVariationSideBarItem] = React.useState(0);\n  const [selectedPropsSideBarItem, setSeletedPropsSideBarItem] = React.useState(0);\n\n  const textColor =\n    colorPalette.primary.appearance === \"light\" ? \"black\" : \"white\";\n\n  React.useEffect(() => {\n    const handleScroll = () => {\n      if(selectedTab === \"usage\"){\n      for(let i=0; i<variationRefs.length; i++){\n        if(variationRefs[i].current?.getBoundingClientRect().top! > 0){\n          setSelectedVariationSideBarItem(i);\n          return;\n        }\n      }}\n      else if(selectedTab === \"props\"){\n        for(let i=0; i<propsRef.length; i++){\n          if(propsRef[i].current?.getBoundingClientRect().top! > 0){\n            setSeletedPropsSideBarItem(i);\n            return;\n          }\n        }\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  },[variationRefs, propsRef, selectedTab]);\n\n  return (\n    <div style={{ margin: \"1.5rem 0 4rem 0\", width: mobile ? \"100%\" : laptop ? \"calc(100% - 12rem)\" : \"calc(100% - 22rem)\"}}>\n      <RenderBreadcrumbsForComponent name={ICONBUTTON.title} />\n\n      <div style={{ padding: \"1rem\" }}>\n        <RenderComponentHeading\n          title={ICONBUTTON.title}\n          description={ICONBUTTON.description}\n        />\n\n        <Tabs color=\"primary\" style={{ marginTop: \"2rem\" }} value={selectedTab} onChange={(value) => setSelectedTab(value)}>\n          {RenderTabsList()}\n          <TabPanels>\n            <div\n              style={{\n                height: \"1px\",\n                width: \"100%\",\n                backgroundColor: colorPalette.primary.accentScale[9],\n                marginTop: \"1rem\",\n              }}\n            />\n            <TabPanel value=\"usage\">\n              <RenderVariations\n                ref={variationRefs[0]}\n                label={ICONBUTTON.usage.installation.label}\n                text={ICONBUTTON.usage.installation.description}\n              />\n              <RenderVariations\n                ref={variationRefs[1]}\n                label={ICONBUTTON.usage.variants.label}\n                description={ICONBUTTON.usage.variants.description}\n                code={CODE_1}\n                text={TEXT_1}\n              />\n              <RenderVariations\n                ref={variationRefs[2]}\n                label={ICONBUTTON.usage.sizes.label}\n                description={ICONBUTTON.usage.sizes.description}\n                code={CODE_2}\n                text={TEXT_2}\n              />\n              <RenderVariations\n                ref={variationRefs[3]}\n                label={ICONBUTTON.usage.disabled.label}\n                description={ICONBUTTON.usage.disabled.description}\n                code={CODE_3}\n                text={TEXT_3}\n              />\n\n              {!laptop && renderSideBarItem([\n                ICONBUTTON.usage.installation.label,\n                ICONBUTTON.usage.variants.label,\n                ICONBUTTON.usage.sizes.label,\n                ICONBUTTON.usage.disabled.label,\n              ], selectedVariationSideBarItem, variationRefs)}\n            </TabPanel>\n            <TabPanel value=\"props\">\n              <Text\n                preciseColor={textColor}\n                size=\"large\"\n                style={{ marginTop: \"2rem\" }}\n              >\n                {ICONBUTTON.props.label}\n              </Text>\n\n              <RenderProps\n                ref={propsRef[0]}\n                propName={ICONBUTTON.props.variant.name}\n                description={ICONBUTTON.props.variant.description}\n                type={ICONBUTTON.props.variant.type}\n                defaultValue={ICONBUTTON.props.variant.default}\n                marginTop=\"1rem\"\n              />\n              <RenderProps\n                ref={propsRef[1]}\n                propName={ICONBUTTON.props.size.name}\n                description={ICONBUTTON.props.size.description}\n                type={ICONBUTTON.props.size.type}\n                defaultValue={ICONBUTTON.props.size.default}\n              />\n              <RenderProps\n                ref={propsRef[2]}\n                propName={ICONBUTTON.props.disabled.name}\n                description={ICONBUTTON.props.disabled.description}\n                type={ICONBUTTON.props.disabled.type}\n                defaultValue={ICONBUTTON.props.disabled.default}\n              />\n              <RenderProps\n                ref={propsRef[3]}\n                propName={ICONBUTTON.props.color.name}\n                description={ICONBUTTON.props.color.description}\n                type={ICONBUTTON.props.color.type}\n                defaultValue={ICONBUTTON.props.color.default}\n              />\n              <RenderProps\n                ref={propsRef[4]}\n                propName={ICONBUTTON.props.icon.name}\n                description={ICONBUTTON.props.icon.description}\n                type={ICONBUTTON.props.icon.type}\n                defaultValue={ICONBUTTON.props.icon.default}\n              />\n              <RenderProps\n                ref={propsRef[5]}\n                propName={ICONBUTTON.props.alt.name}\n                description={ICONBUTTON.props.alt.description}\n                type={ICONBUTTON.props.alt.type}\n                defaultValue={ICONBUTTON.props.alt.default}\n              />\n              <RenderProps\n                ref={propsRef[6]}\n                propName={ICONBUTTON.props.onClick.name}\n                description={ICONBUTTON.props.onClick.description}\n                type={ICONBUTTON.props.onClick.type}\n                defaultValue={ICONBUTTON.props.onClick.default}\n                wordSpacing=\"4px\"\n              />\n\n              {!laptop && renderSideBarItem([\n                  ICONBUTTON.props.variant.name,\n                  ICONBUTTON.props.size.name,\n                  ICONBUTTON.props.disabled.name,\n                  ICONBUTTON.props.color.name,\n                  ICONBUTTON.props.icon.name,\n                  ICONBUTTON.props.alt.name,\n                  ICONBUTTON.props.onClick.name,\n                ], selectedPropsSideBarItem, propsRef\n              )}\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </div>\n    </div>\n  );\n};\nexport default IconButtonDisplay;\n\nconst CODE_1 = (\n  <div style={{ display: \"flex\", gap: \"2rem\", flexWrap: \"wrap\", justifyContent: \"center\", alignItems: \"center\" }}>\n    <IconButton\n      icon={<IconAwardFilled />}\n      alt={ICONBUTTON.code.alt}\n      color=\"component\"\n      variant=\"contained\"\n    />\n    <IconButton\n      icon={<IconAwardFilled />}\n      alt={ICONBUTTON.code.alt}\n      color=\"component\"\n      variant=\"outlined\"\n    />\n    <IconButton\n      icon={<IconAwardFilled />}\n      alt={ICONBUTTON.code.alt}\n      color=\"component\"\n      variant=\"outlined-soft\"\n    />\n    <IconButton\n      icon={<IconAwardFilled />}\n      alt={ICONBUTTON.code.alt}\n      color=\"component\"\n      variant=\"soft\"\n    />\n    <IconButton\n      icon={<IconAwardFilled />}\n      alt={ICONBUTTON.code.alt}\n      color=\"component\"\n      variant=\"neumorph\"\n    />\n    <IconButton\n      icon={<IconAwardFilled />}\n      alt={ICONBUTTON.code.alt}\n      color=\"component\"\n      variant=\"neumorph-contained\"\n    />\n    <IconButton\n      icon={<IconAwardFilled />}\n      alt={ICONBUTTON.code.alt}\n      color=\"component\"\n      disabled\n    />\n  </div>\n);\nconst TEXT_1 = `<IconButton icon={<IconAwardFilled/>} alt=\"${ICONBUTTON.code.alt}\" variant=\"contained\"/>\n<IconButton icon={<IconAwardFilled/>} alt=\"${ICONBUTTON.code.alt}\" variant=\"outlined\"/>\n<IconButton icon={<IconAwardFilled/>} alt=\"${ICONBUTTON.code.alt}\" variant=\"outlined-soft\"/>\n<IconButton icon={<IconAwardFilled/>} alt=\"${ICONBUTTON.code.alt}\" variant=\"soft\"/>\n<IconButton icon={<IconAwardFilled/>} alt=\"${ICONBUTTON.code.alt}\" variant=\"neumorph\"/>\n<IconButton icon={<IconAwardFilled/>} alt=\"${ICONBUTTON.code.alt}\" variant=\"neumorph-contained\"/>\n<IconButton icon={<IconAwardFilled/>} alt=\"${ICONBUTTON.code.alt}\" disabled/>`;\n\nconst CODE_2 = (\n  <div\n    style={{\n      display: \"flex\",\n      gap: \"2rem\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexWrap: \"wrap\",\n    }}\n  >\n    <IconButton\n      icon={<IconAwardFilled />}\n      alt={ICONBUTTON.code.alt}\n      color=\"component\"\n      size=\"small\"\n      style={{ height: \"fit-content\" }}\n    />\n    <IconButton\n      icon={<IconAwardFilled />}\n      alt={ICONBUTTON.code.alt}\n      color=\"component\"\n      size=\"medium\"\n      style={{ height: \"fit-content\" }}\n    />\n    <IconButton\n      icon={<IconAwardFilled />}\n      alt={ICONBUTTON.code.alt}\n      color=\"component\"\n      size=\"large\"\n      style={{ height: \"fit-content\" }}\n    />\n  </div>\n);\nconst TEXT_2 = `<IconButton icon={<IconAwardFilled/>} alt=\"${ICONBUTTON.code.alt}\" size=\"small\"/>\n<IconButton icon={<IconAwardFilled/>} alt=\"${ICONBUTTON.code.alt}\" size=\"medium\"/>\n<IconButton icon={<IconAwardFilled/>} alt=\"${ICONBUTTON.code.alt}\" size=\"large\"/>`;\n\nconst CODE_3 = (\n  <div style={{ display: \"flex\", gap: \"2rem\", flexWrap: \"wrap\", justifyContent: \"center\", alignItems: \"center\" }}>\n    <IconButton icon={<IconAwardFilled />} alt=\"Award\" color=\"component\" disabled/>\n  </div>\n);\nconst TEXT_3 = `<IconButton disabled/>`;\n","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('filled', 'award-filled', 'IconAwardFilled', [[\"path\",{\"d\":\"M19.496 13.983l1.966 3.406a1.001 1.001 0 0 1 -.705 1.488l-.113 .011l-.112 -.001l-2.933 -.19l-1.303 2.636a1.001 1.001 0 0 1 -1.608 .26l-.082 -.094l-.072 -.11l-1.968 -3.407a8.994 8.994 0 0 0 6.93 -3.999z\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M11.43 17.982l-1.966 3.408a1.001 1.001 0 0 1 -1.622 .157l-.076 -.1l-.064 -.114l-1.304 -2.635l-2.931 .19a1.001 1.001 0 0 1 -1.022 -1.29l.04 -.107l.05 -.1l1.968 -3.409a8.994 8.994 0 0 0 6.927 4.001z\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M12 2l.24 .004a7 7 0 0 1 6.76 6.996l-.003 .193l-.007 .192l-.018 .245l-.026 .242l-.024 .178a6.985 6.985 0 0 1 -.317 1.268l-.116 .308l-.153 .348a7.001 7.001 0 0 1 -12.688 -.028l-.13 -.297l-.052 -.133l-.08 -.217l-.095 -.294a6.96 6.96 0 0 1 -.093 -.344l-.06 -.271l-.049 -.271l-.02 -.139l-.039 -.323l-.024 -.365l-.006 -.292a7 7 0 0 1 6.76 -6.996l.24 -.004z\",\"key\":\"svg-2\"}]]);"],"names":["ICONBUTTON","i18n","IconButtonDisplay","windowSize","useWindowSize","laptop","width","mobile","colorPalette","useTheme","theme","variationRefs","Array","from","length","React","propsRef","selectedTab","setSelectedTab","selectedVariationSideBarItem","setSelectedVariationSideBarItem","selectedPropsSideBarItem","setSeletedPropsSideBarItem","textColor","primary","appearance","handleScroll","i","_variationRefs$i$curr","current","getBoundingClientRect","top","_propsRef$i$current","window","addEventListener","removeEventListener","_jsxs","style","margin","children","_jsx","RenderBreadcrumbsForComponent","name","title","padding","RenderComponentHeading","description","Tabs","color","marginTop","value","onChange","RenderTabsList","TabPanels","height","backgroundColor","accentScale","TabPanel","RenderVariations","ref","label","usage","installation","text","variants","code","CODE_1","TEXT_1","sizes","CODE_2","TEXT_2","disabled","CODE_3","TEXT_3","renderSideBarItem","Text","preciseColor","size","props","RenderProps","propName","variant","type","defaultValue","default","icon","alt","onClick","wordSpacing","display","gap","flexWrap","justifyContent","alignItems","IconButton","IconAwardFilled","createReactComponent"],"sourceRoot":""}