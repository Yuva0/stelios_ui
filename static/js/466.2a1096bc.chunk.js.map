{"version":3,"file":"static/js/466.2a1096bc.chunk.js","mappings":"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","sources":["content/ListDisplay.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Text,\n  useTheme,\n  Tabs,\n  TabPanels,\n  TabPanel,\n  List,\n  ListItem\n} from \"stelios\";\nimport {\n  RenderBreadcrumbsForComponent,\n  RenderComponentHeading,\n  RenderProps,\n  renderSideBarItem,\n  RenderTabsList,\n  RenderVariations,\n  useWindowSize,\n} from \"../helpers/helpers\";\nimport i18n from \"../i18n/i18n_en.json\";\n\nconst LIST = i18n.list;\nconst ListDisplay = () => {\n  const windowSize = useWindowSize();\n  const laptop = windowSize.width < 768;\n  const mobile = windowSize.width < 480;\n  const theme = useTheme().theme!;\n  const colorPalette = theme.colorPalette;\n\n  const variationRefs = Array.from({ length: 3 }, () =>\n    React.createRef<HTMLDivElement>()\n  );\n  const propsRef = Array.from({ length: 16 }, () =>\n    React.createRef<HTMLDivElement>()\n  );\n  const [selectedTab, setSelectedTab] = React.useState(\"usage\");\n  const [selectedVariationSideBarItem, setSelectedVariationSideBarItem] =\n    React.useState(0);\n  const [selectedPropsSideBarItem, setSeletedPropsSideBarItem] =\n    React.useState(0);\n\n  const textColor =\n    colorPalette.primary.appearance === \"light\" ? \"black\" : \"white\";\n\n  React.useEffect(() => {\n    const handleScroll = () => {\n      if (selectedTab === \"usage\") {\n        for (let i = 0; i < variationRefs.length; i++) {\n          if (variationRefs[i].current?.getBoundingClientRect().top! > 0) {\n            setSelectedVariationSideBarItem(i);\n            return;\n          }\n        }\n      } else if (selectedTab === \"props\") {\n        for (let i = 0; i < propsRef.length; i++) {\n          if (propsRef[i].current?.getBoundingClientRect().top! > 0) {\n            setSeletedPropsSideBarItem(i);\n            return;\n          }\n        }\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [variationRefs, propsRef, selectedTab]);\n\n    return (\n      <div style={{ margin: \"1.5rem 0 4rem 0\", width: mobile ? \"100%\" : laptop ? \"calc(100% - 12rem)\" : \"calc(100% - 22rem)\"}}>\n        <RenderBreadcrumbsForComponent name={LIST.title} path={LIST.path}/>\n  \n        <div style={{ padding: \"1rem\" }}>\n          <RenderComponentHeading\n            title={LIST.title}\n            description={LIST.description}\n          />\n  \n          <Tabs color=\"primary\" style={{ marginTop: \"2rem\" }} value={selectedTab} onChange={(value) => setSelectedTab(value)}>\n            {RenderTabsList()}\n            <TabPanels>\n              <div\n                style={{\n                  height: \"1px\",\n                  width: \"100%\",\n                  backgroundColor: colorPalette.primary.accentScale[9],\n                  marginTop: \"1rem\",\n                }}\n              />\n              <TabPanel value=\"usage\">\n                <RenderVariations\n                  ref={variationRefs[0]}\n                  label={LIST.usage.installation.label}\n                  text={LIST.usage.installation.description}\n                />\n                <RenderVariations\n                  ref={variationRefs[1]}\n                  label={LIST.usage.variants.label}\n                  description={LIST.usage.variants.description}\n                  code={CODE_1}\n                  text={TEXT_1}\n                />\n                <RenderVariations\n                  ref={variationRefs[2]}\n                  label={LIST.usage.sizes.label}\n                  description={LIST.usage.sizes.description}\n                  code={CODE_2}\n                  text={TEXT_2}\n                />\n                {!laptop && renderSideBarItem([LIST.usage.installation.label, LIST.usage.variants.label, LIST.usage.sizes.label], selectedVariationSideBarItem, variationRefs)}\n              </TabPanel>\n              <TabPanel value=\"props\">\n                <Text\n                  preciseColor={textColor}\n                  size=\"large\"\n                  style={{ marginTop: \"2rem\" }}\n                >\n                  {LIST.props._label}\n                </Text>\n                <RenderProps\n                  ref={propsRef[0]}\n                  propName={LIST.props.variant.name}\n                  description={\n                    LIST.props.variant.description\n                  }\n                  type={LIST.props.variant.type}\n                  defaultValue={\n                    LIST.props.variant.default\n                  }\n                  marginTop=\"1rem\"\n                />\n                <RenderProps\n                  ref={propsRef[1]}\n                  propName={LIST.props.color.name}\n                  description={\n                    LIST.props.color.description\n                  }\n                  type={LIST.props.color.type}\n                  defaultValue={\n                    LIST.props.color.default\n                  }\n                />\n                <RenderProps\n                  ref={propsRef[2]}\n                  propName={LIST.props.children.name}\n                  description={\n                    LIST.props.children.description\n                  }\n                  type={LIST.props.children.type}\n                  defaultValue={\n                    LIST.props.children.default\n                  }\n                />\n                {!laptop && renderSideBarItem([LIST.props.variant.name, LIST.props.color.name, LIST.props.children.name], selectedPropsSideBarItem, propsRef)}\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </div>\n      </div>\n    );\n}\nexport default ListDisplay;\n\nconst CODE_1 = (\n  <div\n    style={{\n      display: \"flex\",\n      gap: \"2rem\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    }}\n  >\n    <List color=\"component\" variant=\"ordered\" title={LIST.code.title}>\n      {LIST.code.items.map((item: string, index: number) => (\n        <ListItem key={index}>{item}</ListItem>\n      ))}\n    </List> \n    <List color=\"component\" variant=\"unordered\" title={LIST.code.title}>\n      {LIST.code.items.map((item: string, index: number) => (\n        <ListItem key={index}>{item}</ListItem>\n      ))}\n    </List>\n    <List color=\"component\" variant=\"none\" title={LIST.code.title}>\n      {LIST.code.items.map((item: string, index: number) => (\n        <ListItem key={index}>{item}</ListItem>\n      ))}\n    </List>\n  </div>\n);\nconst TEXT_1 = `<List color=\"component\" variant=\"ordered\" title=\"${LIST.code.title}\">\n${LIST.code.items.map((item: string, index: number) => (\n  `<ListItem key={${index}}>${item}</ListItem>`\n))}\n</List>\n\n<List color=\"component\" variant=\"unordered\" title=\"${LIST.code.title}\">\n${LIST.code.items.map((item: string, index: number) => (\n  `<ListItem key={${index}}>${item}</ListItem>`\n))}\n</List>;\n\n<List color=\"component\" variant=\"none\" title=\"${LIST.code.title}\">\n${LIST.code.items.map((item: string, index: number) => (\n  `<ListItem key={${index}}>${item}</ListItem>`\n))}\n</List>\n`;\n\nconst CODE_2 = (\n  <div\n    style={{\n      display: \"flex\",\n      gap: \"2rem\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    }}\n  >\n    <List color=\"component\" size=\"small\" title={LIST.code.title}>\n      {LIST.code.items.map((item: string, index: number) => (\n        <ListItem key={index}>{item}</ListItem>\n      ))}\n    </List> \n    <List color=\"component\" size=\"medium\" title={LIST.code.title}>\n      {LIST.code.items.map((item: string, index: number) => (\n        <ListItem key={index}>{item}</ListItem>\n      ))}\n    </List>\n    <List color=\"component\" size=\"large\" title={LIST.code.title}>\n      {LIST.code.items.map((item: string, index: number) => (\n        <ListItem key={index}>{item}</ListItem>\n      ))}\n    </List>\n  </div>\n);\nconst TEXT_2 = `<List color=\"component\" size=\"small\" title=\"${LIST.code.title}\">\n${LIST.code.items.map((item: string, index: number) => (\n  ` <ListItem key={${index}}>${item}</ListItem>`\n))}\n</List>\n\n<List color=\"component\" size=\"medium\" title=\"${LIST.code.title}\">\n${LIST.code.items.map((item: string, index: number) => (\n  ` <ListItem key={${index}}>${item}</ListItem>`\n))}\n</List>;\n\n<List color=\"component\" size=\"large\" title=\"${LIST.code.title}\">\n${LIST.code.items.map((item: string, index: number) => (\n  ` <ListItem key={${index}}>${item}</ListItem>`\n))}\n</List>\n`;"],"names":["LIST","i18n","ListDisplay","windowSize","useWindowSize","laptop","width","mobile","colorPalette","useTheme","theme","variationRefs","Array","from","length","React","propsRef","selectedTab","setSelectedTab","selectedVariationSideBarItem","setSelectedVariationSideBarItem","selectedPropsSideBarItem","setSeletedPropsSideBarItem","textColor","primary","appearance","handleScroll","i","_variationRefs$i$curr","current","getBoundingClientRect","top","_propsRef$i$current","window","addEventListener","removeEventListener","_jsxs","style","margin","children","_jsx","RenderBreadcrumbsForComponent","name","title","path","padding","RenderComponentHeading","description","Tabs","color","marginTop","value","onChange","RenderTabsList","TabPanels","height","backgroundColor","accentScale","TabPanel","RenderVariations","ref","label","usage","installation","text","variants","code","CODE_1","TEXT_1","sizes","CODE_2","TEXT_2","renderSideBarItem","Text","preciseColor","size","props","_label","RenderProps","propName","variant","type","defaultValue","default","display","gap","flexWrap","justifyContent","alignItems","List","items","map","item","index","ListItem"],"sourceRoot":""}