{"version":3,"file":"static/js/472.fef00e23.chunk.js","mappings":"+LAoBA,MAAMA,EAAcC,EAAAA,GAmHpB,EAlH2BC,KACzB,MAAMC,GAAaC,EAAAA,EAAAA,MACbC,EAASF,EAAWG,MAAQ,IAC5BC,EAASJ,EAAWG,MAAQ,IAE5BE,GADQC,EAAAA,EAAAA,MAAWC,MACEF,aAErBG,EAAgBC,MAAMC,KAAK,CAAEC,OAAQ,IAAK,IAC9CC,EAAAA,cAEIC,EAAWJ,MAAMC,KAAK,CAAEC,OAAQ,KAAM,IAC1CC,EAAAA,eAEKE,EAAaC,GAAkBH,EAAAA,SAAe,UAC9CI,EAA8BC,GACnCL,EAAAA,SAAe,IACVM,EAA0BC,GAC/BP,EAAAA,SAAe,GAEXQ,EACgC,UAApCf,EAAagB,QAAQC,WAAyB,QAAU,QA4B1D,OA1BAV,EAAAA,WAAgB,KACd,MAAMW,EAAeA,KACnB,GAAoB,UAAhBT,EACF,IAAK,IAAIU,EAAI,EAAGA,EAAIhB,EAAcG,OAAQa,IAAK,CAAC,IAADC,EAC7C,IAA4B,QAAxBA,EAAAjB,EAAcgB,GAAGE,eAAO,IAAAD,OAAA,EAAxBA,EAA0BE,wBAAwBC,KAAO,EAE3D,YADAX,EAAgCO,EAGpC,MACK,GAAoB,UAAhBV,EACT,IAAK,IAAIU,EAAI,EAAGA,EAAIX,EAASF,OAAQa,IAAK,CAAC,IAADK,EACxC,IAAuB,QAAnBA,EAAAhB,EAASW,GAAGE,eAAO,IAAAG,OAAA,EAAnBA,EAAqBF,wBAAwBC,KAAO,EAEtD,YADAT,EAA2BK,EAG/B,CACF,EAKF,OAFAM,OAAOC,iBAAiB,SAAUR,GAE3B,KACLO,OAAOE,oBAAoB,SAAUT,EAAa,CACnD,GACA,CAACf,EAAeK,EAAUC,KAG3BmB,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,OAAQ,kBAAmBhC,MAAOC,EAAS,OAASF,EAAS,qBAAuB,sBAAuBkC,SAAA,EACvHC,EAAAA,EAAAA,KAACC,EAAAA,GAA6B,CAC5BC,KAAM1C,EAAY2C,MAClBC,KAAM5C,EAAY4C,QAGpBR,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEQ,QAAS,QAASN,SAAA,EAC9BC,EAAAA,EAAAA,KAACM,EAAAA,GAAsB,CACrBH,MAAO3C,EAAY2C,MACnBI,YAAa/C,EAAY+C,eAG3BX,EAAAA,EAAAA,MAACY,EAAAA,GAAI,CAACC,MAAM,UAAUZ,MAAO,CAAEa,UAAW,QAAUC,MAAOlC,EAAamC,SAAWD,GAAUjC,EAAeiC,GAAOZ,SAAA,EAChHc,EAAAA,EAAAA,OACDjB,EAAAA,EAAAA,MAACkB,EAAAA,GAAS,CAAAf,SAAA,EACRC,EAAAA,EAAAA,KAAA,OACEH,MAAO,CACLkB,OAAQ,MACRjD,MAAO,OACPkD,gBAAiBhD,EAAagB,QAAQiC,YAAY,GAClDP,UAAW,WAGfd,EAAAA,EAAAA,MAACsB,EAAAA,GAAQ,CAACP,MAAM,QAAOZ,SAAA,EACrBC,EAAAA,EAAAA,KAACmB,EAAAA,GAAgB,CACfC,IAAKjD,EAAc,GACnBkD,MAAO7D,EAAY8D,MAAMC,aAAaF,MACtCG,KAAMhE,EAAY8D,MAAMC,aAAahB,eAEvCP,EAAAA,EAAAA,KAACmB,EAAAA,GAAgB,CACfC,IAAKjD,EAAc,GACnBkD,MAAO7D,EAAY8D,MAAMG,SAASJ,MAClCd,YAAa/C,EAAY8D,MAAMG,SAASlB,YACxCmB,KAAMC,EACNH,KAAMI,EACNC,SAAS,gBAGThE,IAAUiE,EAAAA,EAAAA,IAAkB,CAACtE,EAAY8D,MAAMC,aAAaF,MAAO7D,EAAY8D,MAAMG,SAASJ,OAAQ1C,EAA8BR,OAExIyB,EAAAA,EAAAA,MAACsB,EAAAA,GAAQ,CAACP,MAAM,QAAOZ,SAAA,EACrBC,EAAAA,EAAAA,KAAC+B,EAAAA,GAAI,CACHC,aAAcjD,EACdkD,KAAK,QACLpC,MAAO,CAAEa,UAAW,QAASX,SAE5BvC,EAAY0E,MAAMC,UAErBnC,EAAAA,EAAAA,KAACoC,EAAAA,GAAW,CACVhB,IAAK5C,EAAS,GACd6D,SAAU7E,EAAY0E,MAAMI,QAAQpC,KACpCK,YAAa/C,EAAY0E,MAAMI,QAAQ/B,YACvCgC,KAAM/E,EAAY0E,MAAMI,QAAQC,KAChCC,aAAchF,EAAY0E,MAAMI,QAAQG,QACxC/B,UAAU,UAGV7C,IAAUiE,EAAAA,EAAAA,IAAkB,CAACtE,EAAY0E,MAAMI,QAAQpC,MAAOrB,EAA0BL,iBAK9F,EAIJkE,EAAsB,oBACtBC,EAAwB,obACxBhB,GACJ/B,EAAAA,EAAAA,MAAA,OACEC,MAAO,CACL+C,QAAS,OACTC,IAAK,OACLC,SAAU,OACVC,eAAgB,SAChBC,WAAY,UACZjD,SAAA,EAEFC,EAAAA,EAAAA,KAACiD,EAAAA,GAAW,CAACC,MAAM,EAAMpF,MAAM,QAAQ2C,MAAM,YAAYN,MAAOuC,EAAqBJ,QAAQ,YAAWvC,UACtGC,EAAAA,EAAAA,KAAC+B,EAAAA,GAAI,CAACoB,cAAY,EAAClB,KAAK,QAAQpC,MAAO,CAACQ,QAAS,QAAQN,SAAE4C,OAE7D3C,EAAAA,EAAAA,KAACiD,EAAAA,GAAW,CAACC,MAAM,EAAMpF,MAAM,QAAQ2C,MAAM,YAAYN,MAAOuC,EAAqBJ,QAAQ,WAAUvC,UACrGC,EAAAA,EAAAA,KAAC+B,EAAAA,GAAI,CAACoB,cAAY,EAAClB,KAAK,QAAQpC,MAAO,CAACQ,QAAS,QAAQN,SAAE4C,OAE7D3C,EAAAA,EAAAA,KAACiD,EAAAA,GAAW,CAACC,MAAM,EAAMpF,MAAM,QAAQ2C,MAAM,YAAYN,MAAOuC,EAAqBJ,QAAQ,OAAMvC,UACjGC,EAAAA,EAAAA,KAAC+B,EAAAA,GAAI,CAACoB,cAAY,EAAClB,KAAK,QAAQpC,MAAO,CAACQ,QAAS,QAAQN,SAAE4C,OAE7D3C,EAAAA,EAAAA,KAACiD,EAAAA,GAAW,CAACC,MAAM,EAAMpF,MAAM,QAAQ2C,MAAM,YAAYN,MAAOuC,EAAqBJ,QAAQ,cAAavC,UACxGC,EAAAA,EAAAA,KAAC+B,EAAAA,GAAI,CAACoB,cAAY,EAAClB,KAAK,QAAQpC,MAAO,CAACQ,QAAS,QAAQN,SAAE4C,SAK3Df,EAAS,orC","sources":["content/CollapsibleDisplay.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Text,\n  useTheme,\n  Tabs,\n  TabPanels,\n  TabPanel,\n  Collapsible,\n} from \"stelios\";\nimport {\n  RenderBreadcrumbsForComponent,\n  RenderComponentHeading,\n  RenderProps,\n  renderSideBarItem,\n  RenderTabsList,\n  RenderVariations,\n  useWindowSize,\n} from \"../helpers/helpers\";\nimport i18n from \"../i18n/i18n_en.json\";\n\nconst COLLAPSIBLE = i18n.collapsible;\nconst CollapsibleDisplay = () => {\n  const windowSize = useWindowSize();\n  const laptop = windowSize.width < 768;\n  const mobile = windowSize.width < 480;\n  const theme = useTheme().theme!;\n  const colorPalette = theme.colorPalette;\n\n  const variationRefs = Array.from({ length: 2 }, () =>\n    React.createRef<HTMLDivElement>()\n  );\n  const propsRef = Array.from({ length: 10 }, () =>\n    React.createRef<HTMLDivElement>()\n  );\n  const [selectedTab, setSelectedTab] = React.useState(\"usage\");\n  const [selectedVariationSideBarItem, setSelectedVariationSideBarItem] =\n    React.useState(0);\n  const [selectedPropsSideBarItem, setSeletedPropsSideBarItem] =\n    React.useState(0);\n\n  const textColor =\n    colorPalette.primary.appearance === \"light\" ? \"black\" : \"white\";\n\n  React.useEffect(() => {\n    const handleScroll = () => {\n      if (selectedTab === \"usage\") {\n        for (let i = 0; i < variationRefs.length; i++) {\n          if (variationRefs[i].current?.getBoundingClientRect().top! > 0) {\n            setSelectedVariationSideBarItem(i);\n            return;\n          }\n        }\n      } else if (selectedTab === \"props\") {\n        for (let i = 0; i < propsRef.length; i++) {\n          if (propsRef[i].current?.getBoundingClientRect().top! > 0) {\n            setSeletedPropsSideBarItem(i);\n            return;\n          }\n        }\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [variationRefs, propsRef, selectedTab]);\n\n  return (\n    <div style={{ margin: \"1.5rem 0 4rem 0\", width: mobile ? \"100%\" : laptop ? \"calc(100% - 12rem)\" : \"calc(100% - 22rem)\" }}>\n      <RenderBreadcrumbsForComponent\n        name={COLLAPSIBLE.title}\n        path={COLLAPSIBLE.path}\n      />\n\n      <div style={{ padding: \"1rem\" }}>\n        <RenderComponentHeading\n          title={COLLAPSIBLE.title}\n          description={COLLAPSIBLE.description}\n        />\n\n        <Tabs color=\"primary\" style={{ marginTop: \"2rem\" }} value={selectedTab} onChange={(value) => setSelectedTab(value)}>\n          {RenderTabsList()}\n          <TabPanels>\n            <div\n              style={{\n                height: \"1px\",\n                width: \"100%\",\n                backgroundColor: colorPalette.primary.accentScale[9],\n                marginTop: \"1rem\",\n              }}\n            />\n            <TabPanel value=\"usage\">\n              <RenderVariations\n                ref={variationRefs[0]}\n                label={COLLAPSIBLE.usage.installation.label}\n                text={COLLAPSIBLE.usage.installation.description}\n              />\n              <RenderVariations\n                ref={variationRefs[1]}\n                label={COLLAPSIBLE.usage.variants.label}\n                description={COLLAPSIBLE.usage.variants.description}\n                code={CODE_1}\n                text={TEXT_1}\n                language=\"javascript\"\n              />\n\n              {!laptop && renderSideBarItem([COLLAPSIBLE.usage.installation.label, COLLAPSIBLE.usage.variants.label], selectedVariationSideBarItem, variationRefs)}\n            </TabPanel>\n            <TabPanel value=\"props\">\n              <Text\n                preciseColor={textColor}\n                size=\"large\"\n                style={{ marginTop: \"2rem\" }}\n              >\n                {COLLAPSIBLE.props._label}\n              </Text>\n              <RenderProps\n                ref={propsRef[0]}\n                propName={COLLAPSIBLE.props.variant.name}\n                description={COLLAPSIBLE.props.variant.description}\n                type={COLLAPSIBLE.props.variant.type}\n                defaultValue={COLLAPSIBLE.props.variant.default}\n                marginTop=\"1rem\"\n              />\n\n              {!laptop && renderSideBarItem([COLLAPSIBLE.props.variant.name], selectedPropsSideBarItem, propsRef)}\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </div>\n    </div>\n  );\n};\nexport default CollapsibleDisplay;\nconst COLLAPSIBLE_TITLE_1 = \"Collapsible Title\";\nconst COLLAPSIBLE_CONTENT_1 = \"Vercal is a cloud platform that enables developers to build, deploy, and scale web applications effortlessly. It is optimized for front-end frameworks like Next.js and offers automatic deployment from Git repositories, serverless functions, and a global content delivery network (CDN) for fast performance. Vercel simplifies workflows with features like continuous integration, previews for every pull request, and automatic scaling.\";\nconst CODE_1 = (\n  <div\n    style={{\n      display: \"flex\",\n      gap: \"2rem\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    }}\n  >\n    <Collapsible open={true} width=\"400px\" color=\"component\" title={COLLAPSIBLE_TITLE_1} variant=\"contained\">\n      <Text disableColor size=\"small\" style={{padding: \"1rem\"}}>{COLLAPSIBLE_CONTENT_1}</Text>\n    </Collapsible>\n    <Collapsible open={true} width=\"400px\" color=\"component\" title={COLLAPSIBLE_TITLE_1} variant=\"outlined\">\n      <Text disableColor size=\"small\" style={{padding: \"1rem\"}}>{COLLAPSIBLE_CONTENT_1}</Text>\n    </Collapsible>\n    <Collapsible open={true} width=\"400px\" color=\"component\" title={COLLAPSIBLE_TITLE_1} variant=\"soft\">\n      <Text disableColor size=\"small\" style={{padding: \"1rem\"}}>{COLLAPSIBLE_CONTENT_1}</Text>\n    </Collapsible>\n    <Collapsible open={true} width=\"400px\" color=\"component\" title={COLLAPSIBLE_TITLE_1} variant=\"transparent\">\n      <Text disableColor size=\"small\" style={{padding: \"1rem\"}}>{COLLAPSIBLE_CONTENT_1}</Text>\n    </Collapsible>\n\n  </div>\n);\nconst TEXT_1 = `\nconst COLLAPSIBLE_TITLE_1 = \"Collapsible Title\";\nconst COLLAPSIBLE_CONTENT_1 = \"Vercal is a cloud platform that enables developers to build, deploy, and scale web applications effortlessly. It is optimized for front-end frameworks like Next.js and offers automatic deployment from Git repositories, serverless functions, and a global content delivery network (CDN) for fast performance. Vercel simplifies workflows with features like continuous integration, previews for every pull request, and automatic scaling.\";\n\n<Collapsible title={COLLAPSIBLE_TITLE_1} variant=\"contained\">\n  <Text disableColor size=\"small\" style={{padding: \"1rem\"}}>{COLLAPSIBLE_CONTENT_1}</Text>\n</Collapsible>\n<Collapsible title={COLLAPSIBLE_TITLE_1} variant=\"outlined\">\n  <Text disableColor size=\"small\" style={{padding: \"1rem\"}}>{COLLAPSIBLE_CONTENT_1}</Text>\n</Collapsible>\n<Collapsible title={COLLAPSIBLE_TITLE_1} variant=\"soft\">\n  <Text disableColor size=\"small\" style={{padding: \"1rem\"}}>{COLLAPSIBLE_CONTENT_1}</Text>\n</Collapsible>\n<Collapsible title={COLLAPSIBLE_TITLE_1} variant=\"transparent\">\n  <Text disableColor size=\"small\" style={{padding: \"1rem\"}}>{COLLAPSIBLE_CONTENT_1}</Text>\n</Collapsible>\n`;"],"names":["COLLAPSIBLE","i18n","CollapsibleDisplay","windowSize","useWindowSize","laptop","width","mobile","colorPalette","useTheme","theme","variationRefs","Array","from","length","React","propsRef","selectedTab","setSelectedTab","selectedVariationSideBarItem","setSelectedVariationSideBarItem","selectedPropsSideBarItem","setSeletedPropsSideBarItem","textColor","primary","appearance","handleScroll","i","_variationRefs$i$curr","current","getBoundingClientRect","top","_propsRef$i$current","window","addEventListener","removeEventListener","_jsxs","style","margin","children","_jsx","RenderBreadcrumbsForComponent","name","title","path","padding","RenderComponentHeading","description","Tabs","color","marginTop","value","onChange","RenderTabsList","TabPanels","height","backgroundColor","accentScale","TabPanel","RenderVariations","ref","label","usage","installation","text","variants","code","CODE_1","TEXT_1","language","renderSideBarItem","Text","preciseColor","size","props","_label","RenderProps","propName","variant","type","defaultValue","default","COLLAPSIBLE_TITLE_1","COLLAPSIBLE_CONTENT_1","display","gap","flexWrap","justifyContent","alignItems","Collapsible","open","disableColor"],"sourceRoot":""}