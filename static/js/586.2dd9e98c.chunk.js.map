{"version":3,"file":"static/js/586.2dd9e98c.chunk.js","mappings":";qNAqBA,MAAMA,EAASC,EAAAA,GA2Of,EAzOsBC,KACpB,MAAMC,GAAaC,EAAAA,EAAAA,MACbC,EAASF,EAAWG,MAAQ,IAC5BC,EAASJ,EAAWG,MAAQ,IAE5BE,GADQC,EAAAA,EAAAA,MAAWC,MACEF,aACrBG,EAAgBC,MAAMC,KAAK,CAAEC,OAAQ,IAAK,IAAMC,EAAAA,cAChDC,EAAWJ,MAAMC,KAAK,CAAEC,OAAQ,KAAM,IAAMC,EAAAA,eAE3CE,EAAaC,GAAkBH,EAAAA,SAAe,UAC9CI,EAA8BC,GAAmCL,EAAAA,SAAe,IAChFM,EAA0BC,GAA+BP,EAAAA,SAAe,GAEzEQ,EACgC,UAApCf,EAAagB,QAAQC,WAAyB,QAAU,QA4B1D,OA1BAV,EAAAA,WAAgB,KACd,MAAMW,EAAeA,KACnB,GAAmB,UAAhBT,EACH,IAAI,IAAIU,EAAE,EAAGA,EAAEhB,EAAcG,OAAQa,IAAI,CAAC,IAADC,EACvC,IAA2B,QAAxBA,EAAAjB,EAAcgB,GAAGE,eAAO,IAAAD,OAAA,EAAxBA,EAA0BE,wBAAwBC,KAAO,EAE1D,YADAX,EAAgCO,EAGpC,MACK,GAAmB,UAAhBV,EACN,IAAI,IAAIU,EAAE,EAAGA,EAAEX,EAASF,OAAQa,IAAI,CAAC,IAADK,EAClC,IAAsB,QAAnBA,EAAAhB,EAASW,GAAGE,eAAO,IAAAG,OAAA,EAAnBA,EAAqBF,wBAAwBC,KAAO,EAErD,YADAT,EAA4BK,EAGhC,CACF,EAKF,OAFAM,OAAOC,iBAAiB,SAAUR,GAE3B,KACLO,OAAOE,oBAAoB,SAAUT,EAAa,CACnD,GACD,CAACf,EAAeK,EAAUC,KAG1BmB,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,OAAQ,kBAAmBhC,MAAOC,EAAS,OAASF,EAAS,qBAAuB,sBAAsBkC,SAAA,EACtHC,EAAAA,EAAAA,KAACC,EAAAA,GAA6B,CAACC,KAAM1C,EAAO2C,MAAOC,KAAM5C,EAAO4C,QAChER,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEQ,QAAS,QAASN,SAAA,EAC9BC,EAAAA,EAAAA,KAACM,EAAAA,GAAsB,CACrBH,MAAO3C,EAAO2C,MACdI,YAAa/C,EAAO+C,eAGtBX,EAAAA,EAAAA,MAACY,EAAAA,GAAI,CAACC,MAAM,UAAUZ,MAAO,CAAEa,UAAW,QAAUC,MAAOlC,EAAamC,SAAWD,GAAUjC,EAAeiC,GAAOZ,SAAA,EAChHc,EAAAA,EAAAA,OAEDjB,EAAAA,EAAAA,MAACkB,EAAAA,GAAS,CAAAf,SAAA,EACRC,EAAAA,EAAAA,KAAA,OACEH,MAAO,CACLkB,OAAQ,MACRjD,MAAO,OACPkD,gBAAiBhD,EAAagB,QAAQiC,YAAY,GAClDP,UAAW,WAGfd,EAAAA,EAAAA,MAACsB,EAAAA,GAAQ,CAACP,MAAM,QAAOZ,SAAA,EAErBC,EAAAA,EAAAA,KAACmB,EAAAA,GAAgB,CACfC,IAAKjD,EAAc,GACnBkD,MAAO7D,EAAO8D,MAAMC,aAAaF,MACjCG,KAAMhE,EAAO8D,MAAMC,aAAahB,eAElCP,EAAAA,EAAAA,KAACmB,EAAAA,GAAgB,CACfC,IAAKjD,EAAc,GACnBkD,MAAO7D,EAAO8D,MAAMG,SAASJ,MAC7Bd,YAAa/C,EAAO8D,MAAMG,SAASlB,YACnCmB,KAAMC,EACNH,KAAMI,KAER5B,EAAAA,EAAAA,KAACmB,EAAAA,GAAgB,CACfC,IAAKjD,EAAc,GACnBkD,MAAO7D,EAAO8D,MAAMO,MAAMR,MAC1Bd,YAAa/C,EAAO8D,MAAMO,MAAMtB,YAChCmB,KAAMI,EACNN,KAAMO,KAER/B,EAAAA,EAAAA,KAACmB,EAAAA,GAAgB,CACfC,IAAKjD,EAAc,GACnBkD,MAAO7D,EAAO8D,MAAMU,MAAMX,MAC1Bd,YAAa/C,EAAO8D,MAAMU,MAAMzB,YAChCmB,KAAMO,EACNT,KAAMU,KAERlC,EAAAA,EAAAA,KAACmB,EAAAA,GAAgB,CACfC,IAAKjD,EAAc,GACnBkD,MAAO7D,EAAO8D,MAAMa,QAAQd,MAC5Bd,YAAa/C,EAAO8D,MAAMa,QAAQ5B,YAClCmB,KAAMU,EACNZ,KAAMa,KAERrC,EAAAA,EAAAA,KAACmB,EAAAA,GAAgB,CACfC,IAAKjD,EAAc,GACnBkD,MAAO7D,EAAO8D,MAAMgB,SAASjB,MAC7Bd,YAAa/C,EAAO8D,MAAMgB,SAAS/B,YACnCmB,KAAMa,EACNf,KAAMgB,KAERxC,EAAAA,EAAAA,KAACmB,EAAAA,GAAgB,CACfC,IAAKjD,EAAc,GACnBkD,MAAO7D,EAAO8D,MAAMmB,UAAUpB,MAC9Bd,YAAa/C,EAAO8D,MAAMmB,UAAUlC,YACpCmB,KAAMgB,EACNlB,KAAMmB,KAGN9E,IAAU+E,EAAAA,EAAAA,IAAkB,CAC5BpF,EAAO8D,MAAMC,aAAaF,MAC1B7D,EAAO8D,MAAMG,SAASJ,MACtB7D,EAAO8D,MAAMO,MAAMR,MACnB7D,EAAO8D,MAAMU,MAAMX,MACnB7D,EAAO8D,MAAMa,QAAQd,MACrB7D,EAAO8D,MAAMgB,SAASjB,MACtB7D,EAAO8D,MAAMmB,UAAUpB,OACtB1C,EAA8BR,OAEnCyB,EAAAA,EAAAA,MAACsB,EAAAA,GAAQ,CAACP,MAAM,QAAOZ,SAAA,EACrBC,EAAAA,EAAAA,KAAC6C,EAAAA,GAAI,CACHC,aAAc/D,EACdgE,KAAK,QACLlD,MAAO,CAAEa,UAAW,QAASX,SAE5BvC,EAAOwF,MAAM3B,SAIhBrB,EAAAA,EAAAA,KAACiD,EAAAA,GAAW,CACV7B,IAAK5C,EAAS,GACd0E,SAAU1F,EAAOwF,MAAMG,QAAQjD,KAC/BK,YAAa/C,EAAOwF,MAAMG,QAAQ5C,YAClC6C,KAAM5F,EAAOwF,MAAMG,QAAQC,KAC3BC,aAAc7F,EAAOwF,MAAMG,QAAQG,QACnC5C,UAAU,UAGZV,EAAAA,EAAAA,KAACiD,EAAAA,GAAW,CACV7B,IAAK5C,EAAS,GACd0E,SAAU1F,EAAOwF,MAAMD,KAAK7C,KAC5BK,YAAa/C,EAAOwF,MAAMD,KAAKxC,YAC/B6C,KAAM5F,EAAOwF,MAAMD,KAAKK,KACxBC,aAAc7F,EAAOwF,MAAMD,KAAKO,WAGlCtD,EAAAA,EAAAA,KAACiD,EAAAA,GAAW,CACV7B,IAAK5C,EAAS,GACd0E,SAAU1F,EAAOwF,MAAMb,QAAQjC,KAC/BK,YAAa/C,EAAOwF,MAAMb,QAAQ5B,YAClC6C,KAAM5F,EAAOwF,MAAMb,QAAQiB,KAC3BC,aAAc7F,EAAOwF,MAAMb,QAAQmB,WAGrCtD,EAAAA,EAAAA,KAACiD,EAAAA,GAAW,CACV7B,IAAK5C,EAAS,GACd0E,SAAU1F,EAAOwF,MAAMV,SAASpC,KAChCK,YAAa/C,EAAOwF,MAAMV,SAAS/B,YACnC6C,KAAM5F,EAAOwF,MAAMV,SAASc,KAC5BC,aAAc7F,EAAOwF,MAAMV,SAASgB,WAGtCtD,EAAAA,EAAAA,KAACiD,EAAAA,GAAW,CACV7B,IAAK5C,EAAS,GACd0E,SAAU1F,EAAOwF,MAAMO,YAAYrD,KACnCK,YAAa/C,EAAOwF,MAAMO,YAAYhD,YACtC6C,KAAM5F,EAAOwF,MAAMO,YAAYH,KAC/BC,aAAc7F,EAAOwF,MAAMO,YAAYD,WAGzCtD,EAAAA,EAAAA,KAACiD,EAAAA,GAAW,CACV7B,IAAK5C,EAAS,GACd0E,SAAU1F,EAAOwF,MAAMvC,MAAMP,KAC7BK,YAAa/C,EAAOwF,MAAMvC,MAAMF,YAChC6C,KAAM5F,EAAOwF,MAAMvC,MAAM2C,KACzBC,aAAc7F,EAAOwF,MAAMvC,MAAM6C,WAGnCtD,EAAAA,EAAAA,KAACiD,EAAAA,GAAW,CACV7B,IAAK5C,EAAS,GACd0E,SAAU1F,EAAOwF,MAAMQ,YAAYtD,KACnCK,YAAa/C,EAAOwF,MAAMQ,YAAYjD,YACtC6C,KAAM5F,EAAOwF,MAAMQ,YAAYJ,KAC/BC,aAAc7F,EAAOwF,MAAMQ,YAAYF,WAGzCtD,EAAAA,EAAAA,KAACiD,EAAAA,GAAW,CACV7B,IAAK5C,EAAS,GACd0E,SAAU1F,EAAOwF,MAAMS,aAAavD,KACpCK,YAAa/C,EAAOwF,MAAMS,aAAalD,YACvC6C,KAAM5F,EAAOwF,MAAMS,aAAaL,KAChCC,aAAc7F,EAAOwF,MAAMS,aAAaH,WAG1CtD,EAAAA,EAAAA,KAACiD,EAAAA,GAAW,CACV7B,IAAK5C,EAAS,GACd0E,SAAU1F,EAAOwF,MAAMjD,SAASG,KAChCK,YAAa/C,EAAOwF,MAAMjD,SAASQ,YACnC6C,KAAM5F,EAAOwF,MAAMjD,SAASqD,KAC5BC,aAAc7F,EAAOwF,MAAMjD,SAASuD,WAGtCtD,EAAAA,EAAAA,KAACiD,EAAAA,GAAW,CACV7B,IAAK5C,EAAS,GACd0E,SAAU1F,EAAOwF,MAAMU,QAAQxD,KAC/BK,YAAa/C,EAAOwF,MAAMU,QAAQnD,YAClC6C,KAAM5F,EAAOwF,MAAMU,QAAQN,KAC3BC,aAAc7F,EAAOwF,MAAMU,QAAQJ,WAGnCzF,IAAU+E,EAAAA,EAAAA,IAAkB,CAC5BpF,EAAOwF,MAAMG,QAAQjD,KACrB1C,EAAOwF,MAAMD,KAAK7C,KAClB1C,EAAOwF,MAAMb,QAAQjC,KACrB1C,EAAOwF,MAAMV,SAASpC,KACtB1C,EAAOwF,MAAMO,YAAYrD,KACzB1C,EAAOwF,MAAMvC,MAAMP,KACnB1C,EAAOwF,MAAMQ,YAAYtD,KACzB1C,EAAOwF,MAAMS,aAAavD,KAC1B1C,EAAOwF,MAAMjD,SAASG,KACtB1C,EAAOwF,MAAMU,QAAQxD,MACpBrB,EAA0BL,iBAKjC,EAKJmD,GACJ/B,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE8D,QAAS,OAAQC,IAAK,OAAQC,SAAU,OAAQC,eAAgB,SAAUC,WAAY,UAAWhE,SAAA,EAC7GC,EAAAA,EAAAA,KAACgE,EAAAA,GAAM,CAACvD,MAAM,YAAY0C,QAAQ,YAAWpD,SAC1CtC,EAAAA,GAAAA,KAAAA,WAEHuC,EAAAA,EAAAA,KAACgE,EAAAA,GAAM,CAACvD,MAAM,YAAY0C,QAAQ,WAAUpD,SACzCtC,EAAAA,GAAAA,KAAAA,WAEHuC,EAAAA,EAAAA,KAACgE,EAAAA,GAAM,CAACvD,MAAM,YAAY0C,QAAQ,gBAAepD,SAC9CtC,EAAAA,GAAAA,KAAAA,WAEHuC,EAAAA,EAAAA,KAACgE,EAAAA,GAAM,CAACvD,MAAM,YAAY0C,QAAQ,OAAMpD,SACrCtC,EAAAA,GAAAA,KAAAA,WAEHuC,EAAAA,EAAAA,KAACgE,EAAAA,GAAM,CAACvD,MAAM,YAAY0C,QAAQ,WAAUpD,SACzCtC,EAAAA,GAAAA,KAAAA,WAEHuC,EAAAA,EAAAA,KAACgE,EAAAA,GAAM,CAACvD,MAAM,YAAY6B,UAAQ,EAAAvC,SAC/BtC,EAAAA,GAAAA,KAAAA,aAIDmE,EAAS,gCAAgCnE,EAAAA,GAAAA,KAAAA,kDACjBA,EAAAA,GAAAA,KAAAA,uDACKA,EAAAA,GAAAA,KAAAA,+CACRA,EAAAA,GAAAA,KAAAA,iDACGA,EAAAA,GAAAA,KAAAA,wCACVA,EAAAA,GAAAA,KAAAA,oBAEdqE,GACJlC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE8D,QAAS,OAAQC,IAAK,OAAQC,SAAU,OAAQC,eAAgB,SAAUC,WAAY,UAAWhE,SAAA,EAC7GC,EAAAA,EAAAA,KAACgE,EAAAA,GAAM,CAACvD,MAAM,YAAYsC,KAAK,QAAOhD,SACnCtC,EAAAA,GAAAA,KAAAA,WAEHuC,EAAAA,EAAAA,KAACgE,EAAAA,GAAM,CAACvD,MAAM,YAAYsC,KAAK,SAAQhD,SACpCtC,EAAAA,GAAAA,KAAAA,WAEHuC,EAAAA,EAAAA,KAACgE,EAAAA,GAAM,CAACvD,MAAM,YAAYsC,KAAK,QAAOhD,SACnCtC,EAAAA,GAAAA,KAAAA,aAIDsE,EAAS,yBAAyBtE,EAAAA,GAAAA,KAAAA,6CACfA,EAAAA,GAAAA,KAAAA,4CACDA,EAAAA,GAAAA,KAAAA,oBAElBwE,GACJrC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE8D,QAAS,OAAQC,IAAK,OAAQC,SAAU,OAAQC,eAAgB,SAAUC,WAAY,UAAWhE,SAAA,EAC7GC,EAAAA,EAAAA,KAACgE,EAAAA,GAAM,CAACvD,MAAM,YAAY+C,aAAaxD,EAAAA,EAAAA,KAACiE,EAAAA,EAAe,IAAIlE,SACxDtC,EAAAA,GAAAA,KAAAA,WAEHuC,EAAAA,EAAAA,KAACgE,EAAAA,GAAM,CAACvD,MAAM,YAAYgD,cAAczD,EAAAA,EAAAA,KAACkE,EAAAA,EAAe,IAAInE,SACzDtC,EAAAA,GAAAA,KAAAA,WAEHuC,EAAAA,EAAAA,KAACgE,EAAAA,GAAM,CACLvD,MAAM,YACN+C,aAAaxD,EAAAA,EAAAA,KAACiE,EAAAA,EAAe,IAC7BR,cAAczD,EAAAA,EAAAA,KAACkE,EAAAA,EAAe,IAAInE,SAEjCtC,EAAAA,GAAAA,KAAAA,aAIDyE,EAAS,8CAA8CzE,EAAAA,GAAAA,KAAAA,kEACfA,EAAAA,GAAAA,KAAAA,8FAC4BA,EAAAA,GAAAA,KAAAA,oBAEpE2E,GACJpC,EAAAA,EAAAA,KAAA,OAAKH,MAAO,CAAE8D,QAAS,OAAQC,IAAK,QAAS7D,UAC3CC,EAAAA,EAAAA,KAACgE,EAAAA,GAAM,CAACvD,MAAM,YAAY0B,SAAO,EAAApC,SAC9BtC,EAAAA,GAAAA,KAAAA,YAID4E,EAAS,oBAAoB5E,EAAAA,GAAAA,KAAAA,qBAE7B8E,GACJvC,EAAAA,EAAAA,KAAA,OAAKH,MAAO,CAAE8D,QAAS,OAAQC,IAAK,QAAS7D,UAC3CC,EAAAA,EAAAA,KAACgE,EAAAA,GAAM,CAACvD,MAAM,YAAY6B,UAAQ,EAAAvC,SAC/BtC,EAAAA,GAAAA,KAAAA,YAID+E,EAAS,qBAAqB/E,EAAAA,GAAAA,KAAAA,qBAE9BiF,GACJ1C,EAAAA,EAAAA,KAAA,OAAKH,MAAO,CAAE8D,QAAS,OAAQC,IAAK,OAAQ9F,MAAO,QAASiC,UAC1DC,EAAAA,EAAAA,KAACgE,EAAAA,GAAM,CAACvD,MAAM,YAAY8C,aAAW,EAAAxD,SAClCtC,EAAAA,GAAAA,KAAAA,YAIDkF,EAAS,wBAAwBlF,EAAAA,GAAAA,KAAAA,2DC7VxByG,GAAAC,WAAAA,GAAqB,SAAU,eAAgB,kBAAmB,CAAC,CAAC,OAAO,CAAC,EAAI,4MAA4M,IAAM,UAAU,CAAC,OAAO,CAAC,EAAI,uMAAuM,IAAM,UAAU,CAAC,OAAO,CAAC,EAAI,kWAAkW,IAAM","sources":["content/ButtonDisplay.tsx","../node_modules/@tabler/icons-react/src/icons/IconAwardFilled.ts"],"sourcesContent":["import React from \"react\";\nimport {\n  Text,\n  useTheme,\n  Button,\n  Tabs,\n  TabPanels,\n  TabPanel,\n} from \"stelios\";\nimport { IconAwardFilled, IconHeartFilled } from \"@tabler/icons-react\";\nimport {\n  RenderBreadcrumbsForComponent,\n  RenderComponentHeading,\n  RenderProps,\n  renderSideBarItem,\n  RenderTabsList,\n  RenderVariations,\n  useWindowSize,\n} from \"../helpers/helpers\";\nimport i18n from \"../i18n/i18n_en.json\";\n\nconst BUTTON = i18n.button;\n\nconst ButtonDisplay = () => {\n  const windowSize = useWindowSize();\n  const laptop = windowSize.width < 768;\n  const mobile = windowSize.width < 480;\n  const theme = useTheme().theme!;\n  const colorPalette = theme.colorPalette;\n  const variationRefs = Array.from({ length: 7 }, () => React.createRef<HTMLDivElement>());\n  const propsRef = Array.from({ length: 10 }, () => React.createRef<HTMLDivElement>());\n\n  const [selectedTab, setSelectedTab] = React.useState(\"usage\");\n  const [selectedVariationSideBarItem, setSelectedVariationSideBarItem] = React.useState(0);\n  const [selectedPropsSideBarItem, setSelectedPropsSideBarItem] = React.useState(0);\n\n  const textColor =\n    colorPalette.primary.appearance === \"light\" ? \"black\" : \"white\";\n\n  React.useEffect(() => {\n    const handleScroll = () => {\n      if(selectedTab === \"usage\"){\n      for(let i=0; i<variationRefs.length; i++){\n        if(variationRefs[i].current?.getBoundingClientRect().top! > 0){\n          setSelectedVariationSideBarItem(i);\n          return;\n        }\n      }}\n      else if(selectedTab === \"props\"){\n        for(let i=0; i<propsRef.length; i++){\n          if(propsRef[i].current?.getBoundingClientRect().top! > 0){\n            setSelectedPropsSideBarItem(i);\n            return;\n          }\n        }\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  },[variationRefs, propsRef, selectedTab]);\n\n  return (\n    <div style={{ margin: \"1.5rem 0 4rem 0\", width: mobile ? \"100%\" : laptop ? \"calc(100% - 12rem)\" : \"calc(100% - 22rem)\"}}>\n      <RenderBreadcrumbsForComponent name={BUTTON.title} path={BUTTON.path}/>\n      <div style={{ padding: \"1rem\" }}>\n        <RenderComponentHeading\n          title={BUTTON.title}\n          description={BUTTON.description}\n        />\n\n        <Tabs color=\"primary\" style={{ marginTop: \"2rem\" }} value={selectedTab} onChange={(value) => setSelectedTab(value)}>\n          {RenderTabsList()}\n\n          <TabPanels>\n            <div\n              style={{\n                height: \"1px\",\n                width: \"100%\",\n                backgroundColor: colorPalette.primary.accentScale[9],\n                marginTop: \"1rem\",\n              }}\n            />\n            <TabPanel value=\"usage\">\n              {/* Usage Variations */}\n              <RenderVariations\n                ref={variationRefs[0]}\n                label={BUTTON.usage.installation.label}\n                text={BUTTON.usage.installation.description}\n              />\n              <RenderVariations\n                ref={variationRefs[1]}\n                label={BUTTON.usage.variants.label}\n                description={BUTTON.usage.variants.description}\n                code={CODE_1}\n                text={TEXT_1}\n              />\n              <RenderVariations\n                ref={variationRefs[2]}\n                label={BUTTON.usage.sizes.label}\n                description={BUTTON.usage.sizes.description}\n                code={CODE_2}\n                text={TEXT_2}\n              />\n              <RenderVariations\n                ref={variationRefs[3]}\n                label={BUTTON.usage.icons.label}\n                description={BUTTON.usage.icons.description}\n                code={CODE_3}\n                text={TEXT_3}\n              />\n              <RenderVariations\n                ref={variationRefs[4]}\n                label={BUTTON.usage.rounded.label}\n                description={BUTTON.usage.rounded.description}\n                code={CODE_4}\n                text={TEXT_4}\n              />\n              <RenderVariations\n                ref={variationRefs[5]}\n                label={BUTTON.usage.disabled.label}\n                description={BUTTON.usage.disabled.description}\n                code={CODE_5}\n                text={TEXT_5}\n              />\n              <RenderVariations\n                ref={variationRefs[6]}\n                label={BUTTON.usage.fullWidth.label}\n                description={BUTTON.usage.fullWidth.description}\n                code={CODE_6}\n                text={TEXT_6}\n              />\n\n              {!laptop && renderSideBarItem([\n                BUTTON.usage.installation.label,\n                BUTTON.usage.variants.label,\n                BUTTON.usage.sizes.label,\n                BUTTON.usage.icons.label,\n                BUTTON.usage.rounded.label,\n                BUTTON.usage.disabled.label,\n                BUTTON.usage.fullWidth.label,\n              ], selectedVariationSideBarItem, variationRefs)}\n            </TabPanel>\n            <TabPanel value=\"props\">\n              <Text\n                preciseColor={textColor}\n                size=\"large\"\n                style={{ marginTop: \"2rem\" }}\n              >\n                {BUTTON.props.label}\n              </Text>\n\n              {/* Variant */}\n              <RenderProps\n                ref={propsRef[0]}\n                propName={BUTTON.props.variant.name}\n                description={BUTTON.props.variant.description}\n                type={BUTTON.props.variant.type}\n                defaultValue={BUTTON.props.variant.default}\n                marginTop=\"1rem\"\n              />\n              {/* Size */}\n              <RenderProps\n                ref={propsRef[1]}\n                propName={BUTTON.props.size.name}\n                description={BUTTON.props.size.description}\n                type={BUTTON.props.size.type}\n                defaultValue={BUTTON.props.size.default}\n              />\n              {/* Rounded */}\n              <RenderProps\n                ref={propsRef[2]}\n                propName={BUTTON.props.rounded.name}\n                description={BUTTON.props.rounded.description}\n                type={BUTTON.props.rounded.type}\n                defaultValue={BUTTON.props.rounded.default}\n              />\n              {/* Disabled */}\n              <RenderProps\n                ref={propsRef[3]}\n                propName={BUTTON.props.disabled.name}\n                description={BUTTON.props.disabled.description}\n                type={BUTTON.props.disabled.type}\n                defaultValue={BUTTON.props.disabled.default}\n              />\n              {/* isFullWidth */}\n              <RenderProps\n                ref={propsRef[4]}\n                propName={BUTTON.props.isFullWidth.name}\n                description={BUTTON.props.isFullWidth.description}\n                type={BUTTON.props.isFullWidth.type}\n                defaultValue={BUTTON.props.isFullWidth.default}\n              />\n              {/* Color */}\n              <RenderProps\n                ref={propsRef[5]}\n                propName={BUTTON.props.color.name}\n                description={BUTTON.props.color.description}\n                type={BUTTON.props.color.type}\n                defaultValue={BUTTON.props.color.default}\n              />\n              {/* Leading Icon */}\n              <RenderProps\n                ref={propsRef[6]}\n                propName={BUTTON.props.leadingIcon.name}\n                description={BUTTON.props.leadingIcon.description}\n                type={BUTTON.props.leadingIcon.type}\n                defaultValue={BUTTON.props.leadingIcon.default}\n              />\n              {/* Trailing Icon */}\n              <RenderProps\n                ref={propsRef[7]}\n                propName={BUTTON.props.trailingIcon.name}\n                description={BUTTON.props.trailingIcon.description}\n                type={BUTTON.props.trailingIcon.type}\n                defaultValue={BUTTON.props.trailingIcon.default}\n              />\n              {/* Children */}\n              <RenderProps\n                ref={propsRef[8]}\n                propName={BUTTON.props.children.name}\n                description={BUTTON.props.children.description}\n                type={BUTTON.props.children.type}\n                defaultValue={BUTTON.props.children.default}\n              />\n              {/* onClick */}\n              <RenderProps\n                ref={propsRef[9]}\n                propName={BUTTON.props.onClick.name}\n                description={BUTTON.props.onClick.description}\n                type={BUTTON.props.onClick.type}\n                defaultValue={BUTTON.props.onClick.default}\n              />\n\n              {!laptop && renderSideBarItem([\n                BUTTON.props.variant.name,\n                BUTTON.props.size.name,\n                BUTTON.props.rounded.name,\n                BUTTON.props.disabled.name,\n                BUTTON.props.isFullWidth.name,\n                BUTTON.props.color.name,\n                BUTTON.props.leadingIcon.name,\n                BUTTON.props.trailingIcon.name,\n                BUTTON.props.children.name,\n                BUTTON.props.onClick.name,\n              ], selectedPropsSideBarItem, propsRef)}\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </div>\n    </div>\n  );\n};\nexport default ButtonDisplay;\n\nconst CODE_1 = (\n  <div style={{ display: \"flex\", gap: \"2rem\", flexWrap: \"wrap\", justifyContent: \"center\", alignItems: \"center\" }}>\n    <Button color=\"component\" variant=\"contained\">\n      {i18n.button.code.content}\n    </Button>\n    <Button color=\"component\" variant=\"outlined\">\n      {i18n.button.code.content}\n    </Button>\n    <Button color=\"component\" variant=\"outlined-soft\">\n      {i18n.button.code.content}\n    </Button>\n    <Button color=\"component\" variant=\"soft\">\n      {i18n.button.code.content}\n    </Button>\n    <Button color=\"component\" variant=\"neumorph\">\n      {i18n.button.code.content}\n    </Button>\n    <Button color=\"component\" disabled>\n      {i18n.button.code.content}\n    </Button>\n  </div>\n);\nconst TEXT_1 = `<Button variant=\"contained\"> ${i18n.button.code.content} </Button>\n<Button variant=\"outlined\"> ${i18n.button.code.content} </Button>\n<Button variant=\"outlined-soft\"> ${i18n.button.code.content} </Button>\n<Button variant=\"soft\">  ${i18n.button.code.content}</Button>\n<Button variant=\"neumorph\"> ${i18n.button.code.content} </Button>\n<Button disabled> ${i18n.button.code.content} </Button>`;\n\nconst CODE_2 = (\n  <div style={{ display: \"flex\", gap: \"2rem\", flexWrap: \"wrap\", justifyContent: \"center\", alignItems: \"center\" }}>\n    <Button color=\"component\" size=\"small\">\n      {i18n.button.code.content}\n    </Button>\n    <Button color=\"component\" size=\"medium\">\n      {i18n.button.code.content}\n    </Button>\n    <Button color=\"component\" size=\"large\">\n      {i18n.button.code.content}\n    </Button>\n  </div>\n);\nconst TEXT_2 = `<Button size=\"small\"> ${i18n.button.code.content} </Button>\n<Button size=\"medium\"> ${i18n.button.code.content} </Button>\n<Button size=\"large\"> ${i18n.button.code.content} </Button>`;\n\nconst CODE_3 = (\n  <div style={{ display: \"flex\", gap: \"2rem\", flexWrap: \"wrap\", justifyContent: \"center\", alignItems: \"center\" }}>\n    <Button color=\"component\" leadingIcon={<IconHeartFilled />}>\n      {i18n.button.code.content}\n    </Button>\n    <Button color=\"component\" trailingIcon={<IconAwardFilled />}>\n      {i18n.button.code.content}\n    </Button>\n    <Button\n      color=\"component\"\n      leadingIcon={<IconHeartFilled />}\n      trailingIcon={<IconAwardFilled />}\n    >\n      {i18n.button.code.content}\n    </Button>\n  </div>\n);\nconst TEXT_3 = `<Button leadingIcon={<IconHeartFilled />}> ${i18n.button.code.content} </Button>\n<Button trailingIcon={<IconHeartFilled />}> ${i18n.button.code.content} </Button>\n<Button leadingIcon={<IconHeartFilled />} trailingIcon={<IconTrophy/>}> ${i18n.button.code.content} </Button>`;\n\nconst CODE_4 = (\n  <div style={{ display: \"flex\", gap: \"2rem\" }}>\n    <Button color=\"component\" rounded>\n      {i18n.button.code.content}\n    </Button>\n  </div>\n);\nconst TEXT_4 = `<Button rounded> ${i18n.button.code.content}} </Button>`;\n\nconst CODE_5 = (\n  <div style={{ display: \"flex\", gap: \"2rem\" }}>\n    <Button color=\"component\" disabled>\n      {i18n.button.code.content}\n    </Button>\n  </div>\n);\nconst TEXT_5 = `<Button disabled> ${i18n.button.code.content}} </Button>`;\n\nconst CODE_6 = (\n  <div style={{ display: \"flex\", gap: \"2rem\", width: \"100%\" }}>\n    <Button color=\"component\" isFullWidth>\n      {i18n.button.code.content}\n    </Button>\n  </div>\n);\nconst TEXT_6 = `<Button isFullWidth> ${i18n.button.code.content}} </Button>`;","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('filled', 'award-filled', 'IconAwardFilled', [[\"path\",{\"d\":\"M19.496 13.983l1.966 3.406a1.001 1.001 0 0 1 -.705 1.488l-.113 .011l-.112 -.001l-2.933 -.19l-1.303 2.636a1.001 1.001 0 0 1 -1.608 .26l-.082 -.094l-.072 -.11l-1.968 -3.407a8.994 8.994 0 0 0 6.93 -3.999z\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M11.43 17.982l-1.966 3.408a1.001 1.001 0 0 1 -1.622 .157l-.076 -.1l-.064 -.114l-1.304 -2.635l-2.931 .19a1.001 1.001 0 0 1 -1.022 -1.29l.04 -.107l.05 -.1l1.968 -3.409a8.994 8.994 0 0 0 6.927 4.001z\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M12 2l.24 .004a7 7 0 0 1 6.76 6.996l-.003 .193l-.007 .192l-.018 .245l-.026 .242l-.024 .178a6.985 6.985 0 0 1 -.317 1.268l-.116 .308l-.153 .348a7.001 7.001 0 0 1 -12.688 -.028l-.13 -.297l-.052 -.133l-.08 -.217l-.095 -.294a6.96 6.96 0 0 1 -.093 -.344l-.06 -.271l-.049 -.271l-.02 -.139l-.039 -.323l-.024 -.365l-.006 -.292a7 7 0 0 1 6.76 -6.996l.24 -.004z\",\"key\":\"svg-2\"}]]);"],"names":["BUTTON","i18n","ButtonDisplay","windowSize","useWindowSize","laptop","width","mobile","colorPalette","useTheme","theme","variationRefs","Array","from","length","React","propsRef","selectedTab","setSelectedTab","selectedVariationSideBarItem","setSelectedVariationSideBarItem","selectedPropsSideBarItem","setSelectedPropsSideBarItem","textColor","primary","appearance","handleScroll","i","_variationRefs$i$curr","current","getBoundingClientRect","top","_propsRef$i$current","window","addEventListener","removeEventListener","_jsxs","style","margin","children","_jsx","RenderBreadcrumbsForComponent","name","title","path","padding","RenderComponentHeading","description","Tabs","color","marginTop","value","onChange","RenderTabsList","TabPanels","height","backgroundColor","accentScale","TabPanel","RenderVariations","ref","label","usage","installation","text","variants","code","CODE_1","TEXT_1","sizes","CODE_2","TEXT_2","icons","CODE_3","TEXT_3","rounded","CODE_4","TEXT_4","disabled","CODE_5","TEXT_5","fullWidth","CODE_6","TEXT_6","renderSideBarItem","Text","preciseColor","size","props","RenderProps","propName","variant","type","defaultValue","default","isFullWidth","leadingIcon","trailingIcon","onClick","display","gap","flexWrap","justifyContent","alignItems","Button","IconHeartFilled","IconAwardFilled","createReactComponent"],"sourceRoot":""}