{"version":3,"file":"static/js/733.6fc249b5.chunk.js","mappings":"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","sources":["content/TextDisplay.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Text,\n  useTheme,\n  Tabs,\n  TabPanels,\n  TabPanel,\n} from \"stelios\";\nimport {\n  RenderBreadcrumbsForComponent,\n  RenderComponentHeading,\n  RenderProps,\n  renderSideBarItem,\n  RenderTabsList,\n  RenderVariations,\n  useWindowSize,\n} from \"../helpers/helpers\";\nimport i18n from \"../i18n/i18n_en.json\";\n\nconst TEXT = i18n.text;\nconst TextDisplay = () => {\n  const windowSize = useWindowSize();\n  const laptop = windowSize.width < 768;\n  const mobile = windowSize.width < 480;\n  const theme = useTheme().theme!;\n  const colorPalette = theme.colorPalette;\n  const variationRefs = Array.from({ length: 3 }, () => React.createRef<HTMLDivElement>());\n  const propsRef = Array.from({ length: 8 }, () => React.createRef<HTMLDivElement>());\n  const [selectedTab, setSelectedTab] = React.useState(\"usage\");\n  const [selectedVariationSideBarItem, setSelectedVariationSideBarItem] = React.useState(0);\n  const [selectedPropsSideBarItem, setSeletedPropsSideBarItem] = React.useState(0);\n\n  const textColor =\n    colorPalette.primary.appearance === \"light\" ? \"black\" : \"white\";\n\n    React.useEffect(() => {\n      const handleScroll = () => {\n        if(selectedTab === \"usage\"){\n        for(let i=0; i<variationRefs.length; i++){\n          if(variationRefs[i].current?.getBoundingClientRect().top! > 0){\n            setSelectedVariationSideBarItem(i);\n            return;\n          }\n        }}\n        else if(selectedTab === \"props\"){\n          for(let i=0; i<propsRef.length; i++){\n            if(propsRef[i].current?.getBoundingClientRect().top! > 0){\n              setSeletedPropsSideBarItem(i);\n              return;\n            }\n          }\n        }\n      };\n  \n      window.addEventListener(\"scroll\", handleScroll);\n  \n      return () => {\n        window.removeEventListener(\"scroll\", handleScroll);\n      };\n    },[variationRefs, propsRef, selectedTab]);\n\n    return (\n      <div style={{ margin: \"1.5rem 0 4rem 0\", width: mobile ? \"100%\" : laptop ? \"calc(100% - 12rem)\" : \"calc(100% - 22rem)\" }}>\n        <RenderBreadcrumbsForComponent name={TEXT.title} path={TEXT.path}/>\n  \n        <div style={{ padding: \"1rem\" }}>\n          <RenderComponentHeading\n            title={TEXT.title}\n            description={TEXT.description}\n          />\n  \n          <Tabs color=\"primary\" style={{ marginTop: \"2rem\" }} value={selectedTab} onChange={(value) => setSelectedTab(value)}>\n            {RenderTabsList()}\n            <TabPanels>\n              <div\n                style={{\n                  height: \"1px\",\n                  width: \"100%\",\n                  backgroundColor: colorPalette.primary.accentScale[9],\n                  marginTop: \"1rem\",\n                }}\n              />\n              <TabPanel value=\"usage\">\n                <RenderVariations\n                  label={TEXT.usage.installation.label}\n                  text={TEXT.usage.installation.description}\n                />\n                <RenderVariations\n                  label={TEXT.usage.variants.label}\n                  description={TEXT.usage.variants.description}\n                  code={CODE_1}\n                  text={TEXT_1}\n                />\n                <RenderVariations\n                  label={TEXT.usage.sizes.label}\n                  description={TEXT.usage.sizes.description}\n                  code={CODE_2}\n                  text={TEXT_2}\n                />\n                {!laptop && renderSideBarItem([TEXT.usage.installation.label, TEXT.usage.variants.label, TEXT.usage.sizes.label], selectedVariationSideBarItem, variationRefs)}\n              </TabPanel>\n              <TabPanel value=\"props\">\n                <Text\n                  preciseColor={textColor}\n                  size=\"large\"\n                  style={{ marginTop: \"2rem\" }}\n                >\n                  {TEXT.props._label}\n                </Text>\n                <RenderProps\n                  propName={TEXT.props.variant.name}\n                  description={\n                    TEXT.props.variant.description\n                  }\n                  type={TEXT.props.variant.type}\n                  defaultValue={\n                    TEXT.props.variant.default\n                  }\n                  marginTop=\"1rem\"\n                />\n                <RenderProps\n                  propName={TEXT.props.size.name}\n                  description={\n                    TEXT.props.size.description\n                  }\n                  type={TEXT.props.size.type}\n                  defaultValue={\n                    TEXT.props.size.default\n                  }\n                />\n                <RenderProps\n                  propName={TEXT.props.color.name}\n                  description={\n                    TEXT.props.color.description\n                  }\n                  type={TEXT.props.color.type}\n                  defaultValue={\n                    TEXT.props.color.default\n                  }\n                />\n                <RenderProps\n                  propName={TEXT.props.children.name}\n                  description={\n                    TEXT.props.children.description\n                  }\n                  type={TEXT.props.children.type}\n                  defaultValue={\n                    TEXT.props.children.default\n                  }\n                />\n                {!laptop && renderSideBarItem([TEXT.props.variant.name, TEXT.props.size.name, TEXT.props.color.name, TEXT.props.children.name], selectedPropsSideBarItem, propsRef)}\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </div>\n      </div>\n    );\n}\nexport default TextDisplay;\n\nconst CODE_1 = (\n  <div\n    style={{\n      display: \"flex\",\n      gap: \"2rem\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    }}\n  >\n    <Text color=\"component\" variant=\"h1\"> H1 Text </Text>\n    <Text color=\"component\" variant=\"h2\"> H2 Text </Text>\n    <Text color=\"component\" variant=\"h3\"> H3 Text </Text>\n    <Text color=\"component\" variant=\"h4\"> H4 Text </Text>\n    <Text color=\"component\" variant=\"h5\"> H5 Text </Text>\n    <Text color=\"component\" variant=\"h6\"> H6 Text </Text>\n    <Text color=\"component\" variant=\"div\"> Div Text </Text>\n    <Text color=\"component\" variant=\"paragraph\"> Paragraph Text </Text>\n    <Text color=\"component\" variant=\"span\"> Span Text </Text>\n    <Text color=\"component\" variant=\"label\"> Label Text </Text>\n  </div>\n);\nconst TEXT_1 = `<Text color=\"component\" variant=\"h1\"> H1 Text </Text>\n<Text color=\"component\" variant=\"h2\"> H2 Text </Text>\n<Text color=\"component\" variant=\"h3\"> H3 Text </Text>\n<Text color=\"component\" variant=\"h4\"> H4 Text </Text>\n<Text color=\"component\" variant=\"h5\"> H5 Text </Text>\n<Text color=\"component\" variant=\"h6\"> H6 Text </Text>\n<Text color=\"component\" variant=\"div\"> Div Text </Text>\n<Text color=\"component\" variant=\"paragraph\"> Paragraph Text </Text>\n<Text color=\"component\" variant=\"span\"> Span Text </Text>\n<Text color=\"component\" variant=\"label\"> Label Text </Text>\n`;\n\nconst CODE_2 = (\n  <div\n    style={{\n      display: \"flex\",\n      gap: \"2rem\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    }}\n  >\n    <Text color=\"component\" size=\"small\"> Small Text </Text>\n    <Text color=\"component\" size=\"medium\"> Medium Text </Text>\n    <Text color=\"component\" size=\"large\"> Large Text </Text>\n  </div>\n);\nconst TEXT_2 = `<Text color=\"component\" size=\"small\"> Small Text </Text>\n<Text color=\"component\" size=\"medium\"> Medium Text </Text>\n<Text color=\"component\" size=\"large\"> Large Text </Text>\n`;"],"names":["TEXT","i18n","TextDisplay","windowSize","useWindowSize","laptop","width","mobile","colorPalette","useTheme","theme","variationRefs","Array","from","length","React","propsRef","selectedTab","setSelectedTab","selectedVariationSideBarItem","setSelectedVariationSideBarItem","selectedPropsSideBarItem","setSeletedPropsSideBarItem","textColor","primary","appearance","handleScroll","i","_variationRefs$i$curr","current","getBoundingClientRect","top","_propsRef$i$current","window","addEventListener","removeEventListener","_jsxs","style","margin","children","_jsx","RenderBreadcrumbsForComponent","name","title","path","padding","RenderComponentHeading","description","Tabs","color","marginTop","value","onChange","RenderTabsList","TabPanels","height","backgroundColor","accentScale","TabPanel","RenderVariations","label","usage","installation","text","variants","code","CODE_1","TEXT_1","sizes","CODE_2","TEXT_2","renderSideBarItem","Text","preciseColor","size","props","_label","RenderProps","propName","variant","type","defaultValue","default","display","gap","flexWrap","justifyContent","alignItems"],"sourceRoot":""}